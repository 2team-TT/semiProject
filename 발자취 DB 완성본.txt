DROP TABLE SCHEDULE;
DROP TABLE ALARM;
DROP TABLE REPEAT;
DROP TABLE TRG_PR_RANK_TEST;
DROP TABLE LIKES_BOARD;
DROP TABLE BOARD_POLICY;
DROP TABLE AGENCY;
DROP TABLE PP_IMG;
DROP TABLE PROPERTY_DETAIL;
DROP TABLE PROPERTY;
DROP TABLE BR_IMG;
DROP TABLE B_REVIEW;
DROP TABLE B_IMG;
DROP TABLE BROKERAGE;
DROP TABLE BOARD_USED;
DROP TABLE BASKET;
DROP TABLE RECENTLY_PRODUCT;
DROP TABLE INCOME;
DROP TABLE CHOOSE;
DROP TABLE PRODUCT_ANSWER; 
DROP TABLE PRODUCT_INQUIRY; 
DROP TABLE PRODUCT_ORDER;
DROP TABLE ORDER_STATUS; 
DROP TABLE PRODUCT_IMG;
DROP TABLE PR_IMG;
DROP TABLE P_REVIEW; 
DROP TABLE PRODUCT;
DROP TABLE ALL_SEARCH;
DROP TABLE SEARCH;
DROP TABLE RE_REPLY;
DROP TABLE BOARD_IMG;
DROP TABLE REPLY;
DROP TABLE BOARD;
DROP TABLE TAG;
DROP TABLE RECEIVE_POST;
DROP TABLE SEND_POST;
DROP TABLE CHAT_MESSAGE;
DROP TABLE CHATROOM;
DROP TABLE EXPENSES;
DROP TABLE CATEGORY;
DROP TABLE USER1;













DROP SEQUENCE SEQ_SCHEDULE_NO;
DROP SEQUENCE SEQ_BPNO;
DROP SEQUENCE SEQ_AGENCYNO;
DROP SEQUENCE SEQ_PROPERTY_IMG_NO;
DROP SEQUENCE SEQ_PROPERTY_DETAIL_NO;
DROP SEQUENCE SEQ_PROPERTY;
DROP SEQUENCE SEQ_BRINO;
DROP SEQUENCE SEQ_BRNO;
DROP SEQUENCE SEQ_B_IMG;
DROP SEQUENCE SEQ_BROKERAGE_NO;
DROP SEQUENCE SEQ_USEDNO;
DROP SEQUENCE SEQ_INCOME;
DROP SEQUENCE SEQ_PRODUCT_ANSWER_NO; 
DROP SEQUENCE SEQ_PRODUCT_INQUIRY_NO; 
DROP SEQUENCE SEQ_PONO;
DROP SEQUENCE SEQ_PRODUCT_IMG;
DROP SEQUENCE SEQ_PRODUCT_REVIEW_IMG_NO;
DROP SEQUENCE SEQ_PRODUCT_REVIEW_NO;
DROP SEQUENCE SEQ_PRO_NO;
DROP SEQUENCE SEQ_SEARCH;
DROP SEQUENCE SEQ_RRNO;
DROP SEQUENCE SEQ_BINO;
DROP SEQUENCE SEQ_REPLYNO;
DROP SEQUENCE SEQ_BNO; -- 게시판 번호 시퀀스 드랍
DROP SEQUENCE SEQ_SPNO;
DROP SEQUENCE SEQ_MESSAGE;
DROP SEQUENCE SEQ_CHNO;
DROP SEQUENCE SEQ_OUTNO;
DROP SEQUENCE SEQ_USERNO;
































--1. 회원테이블


CREATE TABLE USER1 (
	USER_NO	NUMBER CONSTRAINT USERNO_PK PRIMARY KEY,
	USER_ID	VARCHAR2(15) NOT NULL UNIQUE,
	USER_PWD VARCHAR2(15) NOT NULL,
	USER_NAME VARCHAR2(30) NOT NULL,
	USER_NICK VARCHAR2(30) NULL,
	ADDRESS	VARCHAR2(200) NULL,
	PHONE VARCHAR2(13) NOT NULL UNIQUE,
	EMAIL VARCHAR2(30) NULL,
	ENROLL_DATE	DATE DEFAULT SYSDATE,
	MODIFY_DATE	DATE DEFAULT SYSDATE,
	STATUS CHAR(1) DEFAULT 'Y' CHECK(STATUS IN ('Y','N'))
);

COMMENT ON COLUMN USER1.USER_NO IS '회원번호';
COMMENT ON COLUMN USER1.USER_ID IS '회원아이디';
COMMENT ON COLUMN USER1.USER_PWD IS '회원비밀번호';
COMMENT ON COLUMN USER1.USER_NAME IS '이름';
COMMENT ON COLUMN USER1.USER_NICK IS '닉네임';
COMMENT ON COLUMN USER1.ADDRESS IS '주소';
COMMENT ON COLUMN USER1.PHONE IS '휴대번호';
COMMENT ON COLUMN USER1.EMAIL IS '이메일';
COMMENT ON COLUMN USER1.ENROLL_DATE IS '회원가입일';
COMMENT ON COLUMN USER1.MODIFY_DATE IS '정보수정일';
COMMENT ON COLUMN USER1.STATUS IS '상태';

CREATE SEQUENCE SEQ_USERNO NOCACHE;

INSERT INTO USER1 VALUES(SEQ_USERNO.NEXTVAL, 'user01', 'pass01', '김지영', null, null, '010-1111-1111', null, DEFAULT, DEFAULT, DEFAULT );
INSERT INTO USER1 VALUES(SEQ_USERNO.NEXTVAL, 'user02', 'pass02', '김종열', null, null, '010-2222-2222', null, DEFAULT, DEFAULT, DEFAULT );
INSERT INTO USER1 VALUES(SEQ_USERNO.NEXTVAL, 'user03', 'pass03', '박경원', null, null, '010-3333-3333', null, DEFAULT, DEFAULT, DEFAULT );
INSERT INTO USER1 VALUES(SEQ_USERNO.NEXTVAL, 'user04', 'pass04', '이미예', null, null, '010-4444-4444', null, DEFAULT, DEFAULT, DEFAULT );
INSERT INTO USER1 VALUES(SEQ_USERNO.NEXTVAL, 'fwfewe001', 'asfd!', '김시연', null, null, '010-5555-6666', null, DEFAULT, DEFAULT, DEFAULT );
INSERT INTO USER1 VALUES(SEQ_USERNO.NEXTVAL, 'uweewt882', 'pass05', '차은우', null, null, '010-5555-7775', null, DEFAULT, DEFAULT, DEFAULT );
INSERT INTO USER1 VALUES(SEQ_USERNO.NEXTVAL, 'grgrgq48', 'pass05', '카리나', null, null, '010-5555-5885', null, DEFAULT, DEFAULT, DEFAULT );INSERT INTO USER1 VALUES(SEQ_USERNO.NEXTVAL, 'user05', 'pass05', '김시연', null, null, '010-5555-5555', null, DEFAULT, DEFAULT, DEFAULT );
INSERT INTO USER1 VALUES(SEQ_USERNO.NEXTVAL, 'awgerw88', 'pass05', '김지훈', null, null, '010-5110-5355', null, DEFAULT, DEFAULT, DEFAULT );
INSERT INTO USER1 VALUES(SEQ_USERNO.NEXTVAL, 'rbbb99', 'pass05', '이순재', null, null, '010-5575-5595', null, DEFAULT, DEFAULT, DEFAULT );
INSERT INTO USER1 VALUES(SEQ_USERNO.NEXTVAL, 'fffeeww88', 'pass05', '유재석', null, null, '010-5355-6555', null, DEFAULT, DEFAULT, DEFAULT );
INSERT INTO USER1 VALUES(SEQ_USERNO.NEXTVAL, 'fyuyu8', 'pass05', '하하', null, null, '010-5555-5255', null, DEFAULT, DEFAULT, DEFAULT );



--2. 카테고리


CREATE TABLE CATEGORY (
	CATEGORY_NO	NUMBER CONSTRAINT CATEGORYNO_PK PRIMARY KEY,
	CATEGORY_NAME VARCHAR2(20) NOT NULL
);

COMMENT ON COLUMN CATEGORY.CATEGORY_NO IS '카테고리넘버';
COMMENT ON COLUMN CATEGORY.CATEGORY_NAME IS '카테고리이름';

INSERT INTO CATEGORY VALUES (1, '월급');
INSERT INTO CATEGORY VALUES (2, '부수입');
INSERT INTO CATEGORY VALUES (3, '식비');
INSERT INTO CATEGORY VALUES (4, '생활용품');
INSERT INTO CATEGORY VALUES (5, '문화생활');


--3. 지출 테이블


CREATE TABLE EXPENSES (
	OUT_NO NUMBER CONSTRAINT OUTNO_PK PRIMARY KEY,
	OUT_AMOUNT NUMBER NOT NULL,
	OUT_DATE DATE NOT NULL,
	OUT_DES	VARCHAR2(100) NOT NULL,
	CATEGORY_NO	NUMBER REFERENCES CATEGORY NOT NULL ,
	USER_NO	NUMBER REFERENCES USER1 NOT NULL,
	STATUS CHAR(1) DEFAULT 'Y' CHECK(STATUS IN ('Y','N'))
);

COMMENT ON COLUMN EXPENSES.OUT_NO IS '지출번호';
COMMENT ON COLUMN EXPENSES.OUT_AMOUNT IS '지출금액';
COMMENT ON COLUMN EXPENSES.OUT_DATE IS '지출날짜';
COMMENT ON COLUMN EXPENSES.OUT_DES IS '지출설명';
COMMENT ON COLUMN EXPENSES.CATEGORY_NO IS '카테고리넘버';
COMMENT ON COLUMN EXPENSES.USER_NO IS '회원번호';
COMMENT ON COLUMN EXPENSES.STATUS IS '상태';

CREATE SEQUENCE SEQ_OUTNO NOCACHE;

INSERT INTO EXPENSES VALUES (SEQ_OUTNO.NEXTVAL, 10000, '24/07/29', '여가생활', 5, 1, DEFAULT);
INSERT INTO EXPENSES (OUT_NO, OUT_AMOUNT, OUT_DATE, OUT_DES, CATEGORY_NO, USER_NO) VALUES (SEQ_OUTNO.NEXTVAL, 5000, '24/08/01', '로또', 5, 1);
INSERT INTO EXPENSES VALUES (SEQ_OUTNO.NEXTVAL, 1000000, '24/08/05', '핸드폰', 4, 3, DEFAULT);
INSERT INTO EXPENSES VALUES (SEQ_OUTNO.NEXTVAL, 3600, SYSDATE, '과자', 3, 2, DEFAULT);
INSERT INTO EXPENSES VALUES (SEQ_OUTNO.NEXTVAL, 1000, SYSDATE, '스피또', 5, 2, DEFAULT);



--4. 채팅방


CREATE TABLE CHATROOM (
	CH_NO NUMBER CONSTRAINT CHNO_PK PRIMARY KEY,
	USER_NO	NUMBER REFERENCES USER1 NOT NULL,
	USER_NO2 NUMBER REFERENCES USER1 NOT NULL,
    LAST_MESSAGE VARCHAR2(4000),
	CREATE_DATE	DATE DEFAULT SYSDATE NOT NULL,
    MODIFY_DATE DATE DEFAULT SYSDATE,
	STATUS CHAR(1) DEFAULT 'Y' CHECK(STATUS IN ('Y','N'))
);

COMMENT ON COLUMN CHATROOM.CH_NO IS '채팅방번호';
COMMENT ON COLUMN CHATROOM.USER_NO IS '회원번호1';
COMMENT ON COLUMN CHATROOM.USER_NO2 IS '회원번호2';
COMMENT ON COLUMN CHATROOM.CREATE_DATE IS '채팅방생성일';
COMMENT ON COLUMN CHATROOM.LAST_MESSAGE IS '채팅방 마지막 메시지';

COMMENT ON COLUMN CHATROOM.STATUS IS '상태';

CREATE SEQUENCE SEQ_CHNO NOCACHE;

INSERT INTO CHATROOM VALUES(SEQ_CHNO.NEXTVAL, 2, 4,NULL, DEFAULT,DEFAULT, DEFAULT);
INSERT INTO CHATROOM (CH_NO, USER_NO, USER_NO2) VALUES (SEQ_CHNO.NEXTVAL, 3, 4);
INSERT INTO CHATROOM VALUES(SEQ_CHNO.NEXTVAL, 1, 2,NULL, DEFAULT,DEFAULT, DEFAULT);
INSERT INTO CHATROOM VALUES(SEQ_CHNO.NEXTVAL, 4, 5,NULL, DEFAULT,DEFAULT, DEFAULT);
INSERT INTO CHATROOM VALUES(SEQ_CHNO.NEXTVAL, 3, 1,NULL, DEFAULT,DEFAULT, DEFAULT);



--메세지 저장소
CREATE TABLE  CHAT_MESSAGE(
  	CM_NO NUMBER PRIMARY KEY,
	CM_CONTENT VARCHAR2(4000) NOT NULL,
	CH_NO NUMBER  REFERENCES CHATROOM ON DELETE SET NULL,
    	USER_NO NUMBER REFERENCES USER1 ON DELETE SET NULL,
	SEND_DATE DATE DEFAULT SYSDATE
);

CREATE SEQUENCE SEQ_MESSAGE
NOCACHE;

COMMENT ON COLUMN CHAT_MESSAGE.CM_NO IS '메시지번호';
COMMENT ON COLUMN CHAT_MESSAGE.CM_CONTENT IS '메세지 내용';
COMMENT ON COLUMN CHAT_MESSAGE.CH_NO IS '채팅방 번호';
COMMENT ON COLUMN CHAT_MESSAGE.USER_NO IS '보낸유저 번호';
COMMENT ON COLUMN CHAT_MESSAGE.SEND_DATE IS '보낸 날짜';




CREATE OR REPLACE TRIGGER CHAT_LAST_MESSAGE
AFTER INSERT ON CHAT_MESSAGE
FOR EACH ROW
DECLARE

BEGIN
    UPDATE CHATROOM
       SET LAST_MESSAGE = :NEW.CM_CONTENT
         , MODIFY_DATE = SYSDATE
     WHERE CH_NO = :NEW.CH_NO;
       
END;
/






INSERT INTO CHAT_MESSAGE (CM_NO, CM_CONTENT, CH_NO, USER_NO)
VALUES(SEQ_MESSAGE.NEXTVAL , '물건사고 싶습니다.', 1,1 );

INSERT INTO CHAT_MESSAGE (CM_NO, CM_CONTENT, CH_NO, USER_NO)
VALUES(SEQ_MESSAGE.NEXTVAL , '안녕하세요', 2,3 );

INSERT INTO CHAT_MESSAGE (CM_NO, CM_CONTENT, CH_NO, USER_NO)
VALUES(SEQ_MESSAGE.NEXTVAL , '반갑습니다.', 2,4 );

INSERT INTO CHAT_MESSAGE (CM_NO, CM_CONTENT, CH_NO, USER_NO)
VALUES(SEQ_MESSAGE.NEXTVAL , '잘가세요', 2,3 );

INSERT INTO CHAT_MESSAGE (CM_NO, CM_CONTENT, CH_NO, USER_NO)
VALUES(SEQ_MESSAGE.NEXTVAL , '네 잘가세요', 2,4 );



--5. 쪽지보낼때


CREATE TABLE SEND_POST (
	SP_NO NUMBER,
	SEND_USER NUMBER REFERENCES USER1 NOT NULL,
	POST_TITLE VARCHAR2(100) NOT NULL,
	POST_CONTENT VARCHAR2(1000)	NOT NULL,
	IS_READED CHAR(1) DEFAULT 'N' CHECK(IS_READED IN ('Y','N')),
	SEND_DATE DATE DEFAULT SYSDATE NOT NULL	,
	STATUS CHAR(1) DEFAULT 'Y' CHECK(STATUS IN ('Y','N')),
	RECEIVE_USER NUMBER REFERENCES USER1 NOT NULL,
    PRIMARY KEY(SP_NO, SEND_USER)
);

COMMENT ON COLUMN SEND_POST.SP_NO IS '쪽지번호';
COMMENT ON COLUMN SEND_POST.SEND_USER IS '보낸회원';
COMMENT ON COLUMN SEND_POST.POST_TITLE IS '쪽지제목';
COMMENT ON COLUMN SEND_POST.POST_CONTENT IS '쪽지내용';
COMMENT ON COLUMN SEND_POST.IS_READED IS '수신확인';
COMMENT ON COLUMN SEND_POST.SEND_DATE IS '보낸날짜';
COMMENT ON COLUMN SEND_POST.STATUS IS '상태';
COMMENT ON COLUMN SEND_POST.RECEIVE_USER IS '받는회원';

CREATE SEQUENCE SEQ_SPNO NOCACHE;

INSERT INTO SEND_POST VALUES (SEQ_SPNO.NEXTVAL, 2, '야 뭐하냐?', '심심한데 노래방이나 갈까?', 'Y', SYSDATE, DEFAULT, 4);
INSERT INTO SEND_POST (SP_NO, SEND_USER, POST_TITLE, POST_CONTENT, RECEIVE_USER) VALUES (SEQ_SPNO.NEXTVAL, 4, '헐 완전 좋지!', '안그래도 노래방 가고 싶던 참이었는데 ㄱㄱ', 2);
INSERT INTO SEND_POST VALUES (SEQ_SPNO.NEXTVAL, 3, '작성하신 글 잘 봤습니다.', '저희 가족도 같이 참여하고 싶은데 가능할까요?? 부탁드립니다.', DEFAULT, SYSDATE, DEFAULT, 1);
INSERT INTO SEND_POST VALUES (SEQ_SPNO.NEXTVAL, 3, '안녕하세요!!', '안녕하세요? 저번에 중고물품 올리신 거 봤는데 판매완료 된 거 맞죠? 채팅을 안보여서 쪽지 드려봅니다.', DEFAULT, DEFAULT, DEFAULT, 1);
INSERT INTO SEND_POST VALUES (SEQ_SPNO.NEXTVAL, 5, '저기요..?', '글 내려주세요. 심각한 명예훼손입니다. 글 안 내리면 신고할거에요!!', DEFAULT, DEFAULT, DEFAULT, 3);



--6. 쪽지 받을때


CREATE TABLE RECEIVE_POST (
	SP_NO NUMBER,
	SEND_USER NUMBER,
	RECEIVE_POST NUMBER NOT NULL,
	STATUS CHAR(1) DEFAULT 'Y' CHECK(STATUS IN ('Y','N')),
    PRIMARY KEY(SP_NO, SEND_USER),
    FOREIGN KEY (SP_NO, SEND_USER) REFERENCES SEND_POST(SP_NO, SEND_USER),
    FOREIGN KEY (RECEIVE_POST) REFERENCES USER1
);

COMMENT ON COLUMN RECEIVE_POST.SP_NO IS '쪽지번호';
COMMENT ON COLUMN RECEIVE_POST.SEND_USER IS '보낸이';
COMMENT ON COLUMN RECEIVE_POST.RECEIVE_POST IS '받는이';
COMMENT ON COLUMN RECEIVE_POST.STATUS IS '상태';

INSERT INTO RECEIVE_POST VALUES (1, 2, 3, 'Y');
INSERT INTO RECEIVE_POST (SP_NO, SEND_USER, RECEIVE_POST) VALUES (2, 4, 2);
INSERT INTO RECEIVE_POST VALUES (3, 3, 3, DEFAULT);
INSERT INTO RECEIVE_POST VALUES (4, 3, 3, 'Y');
INSERT INTO RECEIVE_POST VALUES (5, 5, 1, 'Y');




-- 7. TAG
CREATE TABLE TAG(
    TAG_NO NUMBER CONSTRAINT TAG_PK PRIMARY KEY,
    TAG_NAME VARCHAR2(30) CONSTRAINT TAG_UN UNIQUE NOT NULL
);

COMMENT ON COLUMN TAG.TAG_NO IS '태그번호';
COMMENT ON COLUMN TAG.TAG_NAME IS '태그이름';

INSERT INTO TAG VALUES(100 , '커뮤니티');
INSERT INTO TAG VALUES(110 , '꿀팁');
INSERT INTO TAG VALUES(120 , '자유게시판');
INSERT INTO TAG VALUES(130 , '너의레시피');
INSERT INTO TAG VALUES(140 , '중고게시판');

INSERT INTO TAG VALUES(200 , '쇼핑');
INSERT INTO TAG VALUES(211 , '새상품,침대');
INSERT INTO TAG VALUES(212 , '새상품,가구');
INSERT INTO TAG VALUES(213 , '새상품,의자');
INSERT INTO TAG VALUES(214 , '새상품,책상');
INSERT INTO TAG VALUES(215 , '새상품,욕실');
INSERT INTO TAG VALUES(216 , '새상품,부엌');
INSERT INTO TAG VALUES(217 , '새상품,인테리어');
INSERT INTO TAG VALUES(218 , '새상품,식재료');
INSERT INTO TAG VALUES(219 , '새상품,간편식');

INSERT INTO TAG VALUES(221 , '리퍼,침대');
INSERT INTO TAG VALUES(222 , '리퍼,가구');
INSERT INTO TAG VALUES(223 , '리퍼,의자');
INSERT INTO TAG VALUES(224 , '리퍼,책상');
INSERT INTO TAG VALUES(225 , '리퍼,욕실');
INSERT INTO TAG VALUES(226 , '리퍼,부엌');
INSERT INTO TAG VALUES(227 , '리퍼,인테리어');

INSERT INTO TAG VALUES(231 , '공동구매,침대');
INSERT INTO TAG VALUES(232 , '공동구매,가구');
INSERT INTO TAG VALUES(233 , '공동구매,의자');
INSERT INTO TAG VALUES(234 , '공동구매,책상');
INSERT INTO TAG VALUES(235 , '공동구매,욕실');
INSERT INTO TAG VALUES(236 , '공동구매,부엌');
INSERT INTO TAG VALUES(237 , '공동구매,인테리어');
INSERT INTO TAG VALUES(238 , '공동구매,식재료');
INSERT INTO TAG VALUES(239 , '공동구매,간편식');

INSERT INTO TAG VALUES(241 , '초특가할인,침대');
INSERT INTO TAG VALUES(242 , '초특가할인,가구');
INSERT INTO TAG VALUES(243 , '초특가할인,의자');
INSERT INTO TAG VALUES(244 , '초특가할인,책상');
INSERT INTO TAG VALUES(245 , '초특가할인,욕실');
INSERT INTO TAG VALUES(246 , '초특가할인,부엌');
INSERT INTO TAG VALUES(247 , '초특가할인,인테리어');
INSERT INTO TAG VALUES(248 , '초특가할인,식재료');
INSERT INTO TAG VALUES(249 , '초특가할인,간편식');

INSERT INTO TAG VALUES(300 , '부동산');
INSERT INTO TAG VALUES(311 , '월세,아파트');
INSERT INTO TAG VALUES(312 , '월세,원룸');
INSERT INTO TAG VALUES(313 , '월세,투룸');

INSERT INTO TAG VALUES(321 , '전세,아파트');
INSERT INTO TAG VALUES(322 , '전세,원룸');
INSERT INTO TAG VALUES(323 , '전세,투룸');

INSERT INTO TAG VALUES(400 , '정책');
INSERT INTO TAG VALUES(500 , '공지사항');


-- 8. 게시판 테이블
CREATE TABLE BOARD (
	BOARD_NO NUMBER CONSTRAINT PK_BOARD_NO PRIMARY KEY,
	TAG_NO NUMBER NOT NULL,
	BOARD_TITLE	VARCHAR2(300) NOT NULL,
	BOARD_CONTENT VARCHAR2(4000) NOT NULL,
	BOARD_WRITER NUMBER NOT NULL,
	VIEW_COUNT NUMBER DEFAULT 0,
	REPLY_COUNT	NUMBER DEFAULT 0,
	LIKES_COUNT	NUMBER	DEFAULT 0,
	CREATE_DATE	DATE DEFAULT SYSDATE NOT NULL,
	STATUS CHAR(1) DEFAULT 'Y' CHECK(STATUS IN('Y','N')),
    CONSTRAINT FK_TAG_NO FOREIGN KEY(TAG_NO) REFERENCES TAG(TAG_NO),
    CONSTRAINT FK_USER1_NO FOREIGN KEY(BOARD_WRITER) REFERENCES USER1(USER_NO)
);


-- 게시글 번호 시퀀스
CREATE SEQUENCE SEQ_BNO NOCACHE;


-- 게시글 코멘트
COMMENT ON COLUMN BOARD.BOARD_NO IS '게시글 번호';
COMMENT ON COLUMN BOARD.TAG_NO IS '게시글 태그 번호';
COMMENT ON COLUMN BOARD.BOARD_TITLE IS '게시글 제목';
COMMENT ON COLUMN BOARD.BOARD_CONTENT IS '게시글 내용';
COMMENT ON COLUMN BOARD.BOARD_WRITER IS '게시글 작성자';
COMMENT ON COLUMN BOARD.VIEW_COUNT IS '조회수';
COMMENT ON COLUMN BOARD.REPLY_COUNT IS '댓글 조회수';
COMMENT ON COLUMN BOARD.LIKES_COUNT IS '좋아요 조회수';
COMMENT ON COLUMN BOARD.CREATE_DATE IS '작성일';
COMMENT ON COLUMN BOARD.STATUS IS '게시글 상태값';


--게시글 임의 데이터 : 태그 번호나 게시글 작성자 같은 참조 데이터는 알맞게 바꾸세요! 2번째, 5번째 데이터
INSERT INTO BOARD
VALUES (SEQ_BNO.NEXTVAL, 110, '첫 번째 꿀팁게시글', '이것은 첫 번째 게시글의 내용입니다.', 1, 0, 0, 0, SYSDATE, DEFAULT);

INSERT INTO BOARD
VALUES (SEQ_BNO.NEXTVAL, 120, '두 번째 자유게시글', '이것은 두 번째 게시글의 내용입니다.', 2, 10, 2, 5, SYSDATE, DEFAULT);

INSERT INTO BOARD
VALUES (SEQ_BNO.NEXTVAL, 130, '세 번째 게시글', '이것은 세 번째 게시글의 내용입니다.', 3, 5, 1, 2, SYSDATE, DEFAULT);

INSERT INTO BOARD
VALUES (SEQ_BNO.NEXTVAL, 140, '네 번째 게시글', '이것은 네 번째 게시글의 내용입니다.', 4, 20, 5, 10, SYSDATE, DEFAULT);

INSERT INTO BOARD
VALUES (SEQ_BNO.NEXTVAL, 120, '다섯 번째 게시글', '이것은 다섯 번째 게시글의 내용입니다.', 1, 15, 3, 7, SYSDATE, DEFAULT);

INSERT INTO BOARD
VALUES (SEQ_BNO.NEXTVAL, 120, '여섯 번째 게시글', '이것은 여섯 번째 게시글의 내용입니다.', 1, 75, 3, 7, SYSDATE, DEFAULT);

INSERT INTO BOARD
VALUES (SEQ_BNO.NEXTVAL, 120, '일곱 번째 게시글', '이것은 일곱 번째 게시글의 내용입니다.', 1, 175, 3, 7, SYSDATE, DEFAULT);

INSERT INTO BOARD
VALUES (SEQ_BNO.NEXTVAL, 120, '여덞 번째 게시글', '이것은 여덞 번째 게시글의 내용입니다.', 1, 2, 3, 7, SYSDATE, DEFAULT);

INSERT INTO BOARD
VALUES (SEQ_BNO.NEXTVAL, 110, '아홉 번째 게시글', '이것은 아홉 번째 게시글의 내용입니다.', 1, 20, 3, 7, SYSDATE, DEFAULT);

INSERT INTO BOARD
VALUES (SEQ_BNO.NEXTVAL, 110, '열 번째 게시글', '이것은 열 번째 게시글의 내용입니다.', 1, 23, 3, 7, SYSDATE, DEFAULT);

INSERT INTO BOARD
VALUES (SEQ_BNO.NEXTVAL, 500, '공지사항1', '공지사항1입니다.', 1, 53, 3, 7, SYSDATE, DEFAULT);

INSERT INTO BOARD
VALUES (SEQ_BNO.NEXTVAL, 500, '공지사항2', '공지사항2입니다.', 1, 54, 3, 7, SYSDATE, DEFAULT);

INSERT INTO BOARD
VALUES (SEQ_BNO.NEXTVAL, 500, '공지사항3', '공지사항3입니다.', 1, 55, 3, 7, SYSDATE, DEFAULT);

INSERT INTO BOARD
VALUES (SEQ_BNO.NEXTVAL, 500, '공지사항4', '공지사항4입니다.', 1, 56, 3, 7, SYSDATE, DEFAULT);
INSERT INTO BOARD
VALUES (SEQ_BNO.NEXTVAL, 500, '공지사항5', '공지사항5입니다.', 1, 3, 3, 7, SYSDATE, DEFAULT);



CREATE TABLE LIKES_BOARD(
    USER_NO NUMBER REFERENCES USER1,
    BOARD_NO NUMBER REFERENCES BOARD,
    PRIMARY KEY(USER_NO,BOARD_NO)
);

COMMENT ON COLUMN LIKES_BOARD.USER_NO IS '좋아요 누른 회원';
COMMENT ON COLUMN LIKES_BOARD.BOARD_NO IS '종아요한 게시글';

--BOARD 좋아요수 카운트 업 트리거
CREATE OR REPLACE TRIGGER LIKES_BOARD_TRG
AFTER INSERT ON LIKES_BOARD
FOR EACH ROW
DECLARE

BEGIN
    UPDATE BOARD
       SET LIKES_COUNT = LIKES_COUNT+1
     WHERE BOARD_NO = :NEW.BOARD_NO;
END;
/
--BOARD 좋아요수 카운트 다운 트리거
CREATE OR REPLACE TRIGGER LIKES_BOARD_DELETE_TRG
AFTER DELETE ON LIKES_BOARD
FOR EACH ROW
DECLARE

BEGIN
    UPDATE BOARD
       SET LIKES_COUNT = LIKES_COUNT-1
     WHERE BOARD_NO = :OLD.BOARD_NO;
       
END;
/


INSERT INTO LIKES_BOARD VALUES(1, 1);
INSERT INTO LIKES_BOARD VALUES(2,1);
INSERT INTO LIKES_BOARD VALUES(3, 1);
INSERT INTO LIKES_BOARD VALUES(4,1);
INSERT INTO LIKES_BOARD VALUES(5, 1);








--9 . 댓글 테이블
 

CREATE TABLE REPLY (
    REPLY_NO NUMBER CONSTRAINT REPLNO_PK PRIMARY KEY,
    BOARD_NO NUMBER REFERENCES BOARD NOT NULL,
    REPLY_WRITER NUMBER REFERENCES USER1 NOT NULL, 
    REPLY_CONTENT VARCHAR2(1000) NOT NULL, 
    LIKES_COUNT NUMBER	DEFAULT 0, 
    RE_REPLY_COUNT NUMBER DEFAULT 0,
    CREATE_DATE DATE DEFAULT SYSDATE NOT NULL, 
    STATUS	CHAR(1)	DEFAULT 'Y' CHECK(STATUS IN('Y','N'))
);

COMMENT ON COLUMN REPLY.REPLY_NO IS '댓글번호';
COMMENT ON COLUMN REPLY.BOARD_NO IS '게시판번호';
COMMENT ON COLUMN REPLY.REPLY_WRITER IS '회원번호';
COMMENT ON COLUMN REPLY.REPLY_CONTENT IS '댓글내용';
COMMENT ON COLUMN REPLY.LIKES_COUNT IS '좋아요수';
COMMENT ON COLUMN REPLY.CREATE_DATE IS '작성일';
COMMENT ON COLUMN REPLY.RE_REPLY_COUNT IS '대댓글 카운트';
COMMENT ON COLUMN REPLY.STATUS IS '상태';

CREATE SEQUENCE SEQ_REPLYNO NOCACHE;

--BOARD 댓글 카운트 업 트리거
CREATE OR REPLACE TRIGGER REPLY_BOARD_COUNT_UP
AFTER INSERT ON REPLY
FOR EACH ROW
DECLARE

BEGIN
    UPDATE BOARD
       SET REPLY_COUNT = REPLY_COUNT+1
     WHERE BOARD_NO = :NEW.BOARD_NO;
END;
/
--BOARD 댓글 카운트 다운 트리거
CREATE OR REPLACE TRIGGER REPLY_BOARD_COUNT_DOWN
AFTER DELETE ON REPLY
FOR EACH ROW
DECLARE

BEGIN
    UPDATE BOARD
       SET REPLY_COUNT = REPLY_COUNT-1
     WHERE BOARD_NO = :OLD.BOARD_NO;
       
END;
/



INSERT INTO REPLY VALUES (SEQ_REPLYNO.NEXTVAL, 1, 2, 'ㅋㅋㅋㅋㅋㅋㅋㅋ', DEFAULT,DEFAULT, SYSDATE, DEFAULT );
INSERT INTO REPLY (REPLY_NO, BOARD_NO, REPLY_WRITER, REPLY_CONTENT) VALUES (SEQ_REPLYNO.NEXTVAL, 2, 3, '너무 좋아요!!');
INSERT INTO REPLY (REPLY_NO, BOARD_NO, REPLY_WRITER, REPLY_CONTENT, CREATE_DATE) VALUES (SEQ_REPLYNO.NEXTVAL, 3, 4, '별론데요', DEFAULT);
INSERT INTO REPLY VALUES(SEQ_REPLYNO.NEXTVAL, 4, 5, '이게 뭔가요??', DEFAULT,DEFAULT, SYSDATE, 'Y');
INSERT INTO REPLY (REPLY_NO, BOARD_NO, REPLY_WRITER, REPLY_CONTENT) VALUES (SEQ_REPLYNO.NEXTVAL, 5, 2, '왜 그렇게 생각하시죠?');



-- 10. 게시판 사진 테이블
CREATE TABLE BOARD_IMG(
	B_IMG_NO NUMBER CONSTRAINT PK_B_IMG_NO PRIMARY KEY,
	BOARD_NO NUMBER	NOT NULL,
	ORIGIN_NAME	VARCHAR2(300) NOT NULL,
	CHANGE_NAME	VARCHAR2(300) NOT NULL,
	FILEPATH VARCHAR2(1000),
	UPLOAD_DATE	DATE DEFAULT SYSDATE NOT NULL,
	FILE_LEVEL CHAR(1),
	STATUS CHAR(1) DEFAULT 'Y' CHECK(STATUS IN('Y','N')),
    CONSTRAINT FK_BOARD_NO FOREIGN KEY(BOARD_NO) REFERENCES BOARD(BOARD_NO)
);


-- 게시판 사진 번호 시퀀스

CREATE SEQUENCE SEQ_BINO NOCACHE;


-- 게시판 사진 코멘트
COMMENT ON COLUMN BOARD_IMG.B_IMG_NO IS '게시판 사진 번호';
COMMENT ON COLUMN BOARD_IMG.BOARD_NO IS '게시글 번호';
COMMENT ON COLUMN BOARD_IMG.ORIGIN_NAME IS '원본 파일명';
COMMENT ON COLUMN BOARD_IMG.CHANGE_NAME IS '수정 파일명';
COMMENT ON COLUMN BOARD_IMG.FILEPATH IS '파일 경로';
COMMENT ON COLUMN BOARD_IMG.UPLOAD_DATE IS '업로드 날짜';
COMMENT ON COLUMN BOARD_IMG.FILE_LEVEL IS '파일레벨';
COMMENT ON COLUMN BOARD_IMG.STATUS IS '게시글 사진 상태값';


-- 게시판 사진 임의 데이터 : 외래키 데이터 2번째
INSERT INTO BOARD_IMG
VALUES (SEQ_BINO.NEXTVAL, 1, 'original_image1.jpg', '파일명.png', '/resources/bImg/', DEFAULT, '1', DEFAULT);

INSERT INTO BOARD_IMG
VALUES (SEQ_BINO.NEXTVAL, 2, 'original_image2.png', 'change_image2.png', '/resources/bImg/', DEFAULT, '1', DEFAULT);

INSERT INTO BOARD_IMG
VALUES (SEQ_BINO.NEXTVAL, 3, 'original_image3.gif', 'change_image3.gif', '/resources/bImg/', DEFAULT, '1', DEFAULT);

INSERT INTO BOARD_IMG
VALUES (SEQ_BINO.NEXTVAL, 4, 'original_image4.bmp', 'change_image4.bmp', '/resources/bImg/', DEFAULT, '1', DEFAULT);

INSERT INTO BOARD_IMG
VALUES (SEQ_BINO.NEXTVAL, 5, 'original_image5.jpg', 'change_image5.jpg', '/resources/bImg/', DEFAULT, '1', DEFAULT);



-- 11. 대댓글 테이블
CREATE TABLE RE_REPLY(
	RR_NO NUMBER CONSTRAINT PK_RR_NO PRIMARY KEY,
	REPLY_NO NUMBER NOT NULL,
	RR_WRITER NUMBER NOT NULL,
	RR_CONTENT VARCHAR(1000),
	CREATE_DATE	DATE DEFAULT SYSDATE NOT NULL,
	STATUS CHAR(1) DEFAULT 'Y' CHECK(STATUS IN('Y','N')),
    CONSTRAINT FK_RR_REPLY_NO FOREIGN KEY(REPLY_NO) REFERENCES REPLY(REPLY_NO),
    CONSTRAINT FK_RR_WRITER FOREIGN KEY(RR_WRITER) REFERENCES USER1(USER_NO)
);


-- 대댓글 번호 시퀀스
CREATE SEQUENCE SEQ_RRNO NOCACHE;

CREATE OR REPLACE TRIGGER TRI_RERLY_COUNT
AFTER INSERT ON RE_REPLY
FOR EACH ROW
DECLARE
BEGIN
    UPDATE REPLY
       SET RE_REPLY_COUNT =RE_REPLY_COUNT+1
     WHERE REPLY_NO = :NEW.REPLY_NO;
     
END;
/



CREATE OR REPLACE TRIGGER TRI_RERLY_COUNTDOWN
AFTER UPDATE ON RE_REPLY
FOR EACH ROW
DECLARE
 
BEGIN

    IF :NEW.STATUS ='N'
        THEN UPDATE REPLY
               SET RE_REPLY_COUNT =RE_REPLY_COUNT-1
             WHERE REPLY_NO = :NEW.REPLY_NO;
    END IF;
     
END;
/


-- 대댓글 코멘트
COMMENT ON COLUMN RE_REPLY.RR_NO IS '대댓글 번호';
COMMENT ON COLUMN RE_REPLY.REPLY_NO IS '댓글 번호';
COMMENT ON COLUMN RE_REPLY.RR_WRITER IS '대댓글 작성자';
COMMENT ON COLUMN RE_REPLY.RR_CONTENT IS '대댓글 내용';
COMMENT ON COLUMN RE_REPLY.CREATE_DATE IS '대댓글 작성일';
COMMENT ON COLUMN RE_REPLY.STATUS IS '대댓글 상태값';


-- 대댓글 임의 데이터 : 외래키 데이터 2,3번째
INSERT INTO RE_REPLY
VALUES (SEQ_RRNO.NEXTVAL, 1, 1, '대댓글 내용 1', DEFAULT, DEFAULT);

INSERT INTO RE_REPLY
VALUES (SEQ_RRNO.NEXTVAL, 2, 2, '대댓글 내용 2', DEFAULT, DEFAULT);

INSERT INTO RE_REPLY
VALUES (SEQ_RRNO.NEXTVAL, 3, 3, '대댓글 내용 3', DEFAULT, DEFAULT);

INSERT INTO RE_REPLY
VALUES (SEQ_RRNO.NEXTVAL, 4, 4, '대댓글 내용 4', DEFAULT, DEFAULT);

INSERT INTO RE_REPLY
VALUES (SEQ_RRNO.NEXTVAL, 5, 5, '대댓글 내용 5', DEFAULT, DEFAULT);


CREATE TABLE ALL_SEARCH(
    AS_CONTENT VARCHAR(4000) PRIMARY KEY,
    AS_COUNT NUMBER DEFAULT 1
);

INSERT INTO ALL_SEARCH(AS_CONTENT)
VALUES ('졸려요');
INSERT INTO ALL_SEARCH(AS_CONTENT)
VALUES ('저녁메뉴');
INSERT INTO ALL_SEARCH(AS_CONTENT)
VALUES ('욕실청소');
INSERT INTO ALL_SEARCH(AS_CONTENT)
VALUES ('빨래');
INSERT INTO ALL_SEARCH(AS_CONTENT)
VALUES ('저금');
INSERT INTO ALL_SEARCH(AS_CONTENT)
VALUES ('가구');
INSERT INTO ALL_SEARCH(AS_CONTENT)
VALUES ('테이블');
INSERT INTO ALL_SEARCH(AS_CONTENT)
VALUES ('반찬');
INSERT INTO ALL_SEARCH(AS_CONTENT)
VALUES ('핸드폰');
INSERT INTO ALL_SEARCH(AS_CONTENT)
VALUES ('컴퓨터');


-- 12. SEARCH
CREATE TABLE SEARCH(
    S_NO NUMBER CONSTRAINT S_NO_PK PRIMARY KEY,
    TAG_NO NUMBER DEFAULT NULL CONSTRAINT S_TAG REFERENCES TAG ON DELETE SET NULL,
    USER_NO NUMBER REFERENCES USER1 ON DELETE SET NULL,
    S_NAME VARCHAR2(4000) CONSTRAINT S_NAME NOT NULL,
    S_COUNT NUMBER DEFAULT 1,
    S_DATE DATE DEFAULT SYSDATE
    
);

COMMENT ON COLUMN SEARCH.S_NO IS '검색번호';
COMMENT ON COLUMN SEARCH.TAG_NO IS '태그번호';
COMMENT ON COLUMN SEARCH.S_NAME IS '검색어';
COMMENT ON COLUMN SEARCH.S_COUNT IS '검색량';
COMMENT ON COLUMN SEARCH.S_DATE IS '검색날짜';
COMMENT ON COLUMN SEARCH.USER_NO IS '회원번호';
-- SEARCH 시퀀스
CREATE SEQUENCE SEQ_SEARCH NOCACHE;

INSERT INTO SEARCH (S_NO, S_NAME)
VALUES(SEQ_SEARCH.NEXTVAL , '졸려요');
INSERT INTO SEARCH (S_NO, S_NAME)
VALUES(SEQ_SEARCH.NEXTVAL , '저녁메뉴');
INSERT INTO SEARCH (S_NO, S_NAME)
VALUES(SEQ_SEARCH.NEXTVAL , '욕실청소');
INSERT INTO SEARCH (S_NO, S_NAME)
VALUES(SEQ_SEARCH.NEXTVAL , '빨래');
INSERT INTO SEARCH (S_NO, S_NAME)
VALUES(SEQ_SEARCH.NEXTVAL , '저금');
INSERT INTO SEARCH (S_NO, S_NAME)
VALUES(SEQ_SEARCH.NEXTVAL , '가구');
INSERT INTO SEARCH (S_NO, S_NAME)
VALUES(SEQ_SEARCH.NEXTVAL , '테이블');
INSERT INTO SEARCH (S_NO, S_NAME)
VALUES(SEQ_SEARCH.NEXTVAL , '반찬');
INSERT INTO SEARCH (S_NO, S_NAME)
VALUES(SEQ_SEARCH.NEXTVAL , '핸드폰');
INSERT INTO SEARCH (S_NO, S_NAME)
VALUES(SEQ_SEARCH.NEXTVAL , '컴퓨터');


-- 13. 상품 테이블
CREATE TABLE PRODUCT(
    P_NO NUMBER PRIMARY KEY,
    TAG_NO NUMBER REFERENCES TAG ON DELETE SET NULL,
    P_NAME VARCHAR2(50) NOT NULL,
    P_SELLER VARCHAR2(30) NOT NULL,
    PRICE NUMBER NOT NULL,
    DISCOUNT NUMBER DEFAULT 1,
    SELL_STATUS VARCHAR2(20) DEFAULT '판매중' NOT NULL,
    STOCK NUMBER NOT NULL,
    RATING NUMBER DEFAULT 0,
    P_CONTENT VARCHAR2(4000) NOT NULL,
    D_PRICE VARCHAR2(20)NOT NULL,
    GROUP_COUNT NUMBER DEFAULT 0,
    PR_COUNT NUMBER DEFAULT 0,
    CHOOSE_COUNT NUMBER DEFAULT 0,
    VIEW_COUNT NUMBER DEFAULT 0,
    REG_DATE DATE DEFAULT SYSDATE,
    STATUS CHAR(1) DEFAULT 'Y' CHECK(STATUS IN ('Y','N'))
);

COMMENT ON COLUMN PRODUCT.P_NO IS '상품번호';
COMMENT ON COLUMN PRODUCT.TAG_NO IS '태그번호';
COMMENT ON COLUMN PRODUCT.P_NAME IS '상품명';
COMMENT ON COLUMN PRODUCT.P_SELLER IS '판매자';
COMMENT ON COLUMN PRODUCT.PRICE IS '가격';
COMMENT ON COLUMN PRODUCT.DISCOUNT IS '할인율';
COMMENT ON COLUMN PRODUCT.SELL_STATUS IS '판매여부';
COMMENT ON COLUMN PRODUCT.STOCK IS '재고수량';
COMMENT ON COLUMN PRODUCT.RATING IS '별점';
COMMENT ON COLUMN PRODUCT.P_CONTENT IS '상품설명';
COMMENT ON COLUMN PRODUCT.D_PRICE IS '배송비';
COMMENT ON COLUMN PRODUCT.GROUP_COUNT IS '공동구매용 카운트';
COMMENT ON COLUMN PRODUCT.PR_COUNT IS '리뷰수';
COMMENT ON COLUMN PRODUCT.CHOOSE_COUNT IS '찜한 수';
COMMENT ON COLUMN PRODUCT.VIEW_COUNT IS '조회수';
COMMENT ON COLUMN PRODUCT.REG_DATE IS '등록일';
COMMENT ON COLUMN PRODUCT.STATUS IS '상태';

CREATE SEQUENCE SEQ_PRO_NO
NOCACHE;

INSERT INTO PRODUCT (P_NO, TAG_NO, P_NAME, P_SELLER, PRICE, DISCOUNT, SELL_STATUS, STOCK, P_CONTENT, D_PRICE )
VALUES(SEQ_PRO_NO.NEXTVAL , 211, '시몬스침대', '시몬스', 1000000, 1, '판매중', 55, '편안한 침대', '무료배송'  );
INSERT INTO PRODUCT (P_NO, TAG_NO, P_NAME, P_SELLER, PRICE, DISCOUNT, SELL_STATUS, STOCK, P_CONTENT, D_PRICE )
VALUES(SEQ_PRO_NO.NEXTVAL, 219, '닭가슴살 도시락', '하림', 9000, 0.7 , '판매중', 45, '맛있는 닭가슴살 도시락', '무료배송'  );
INSERT INTO PRODUCT (P_NO, TAG_NO, P_NAME, P_SELLER, PRICE, DISCOUNT, SELL_STATUS, STOCK, P_CONTENT, D_PRICE )
VALUES(SEQ_PRO_NO.NEXTVAL, 218, '파 500g', '농산물', 2000, 1 , '판매중', 35, '유기농 파', '3000원'  );
INSERT INTO PRODUCT (P_NO, TAG_NO, P_NAME, P_SELLER, PRICE, DISCOUNT, SELL_STATUS, STOCK, P_CONTENT, D_PRICE )
VALUES(SEQ_PRO_NO.NEXTVAL, 213, '게이밍의자', '로지텍', 180000, 1 , '입고예정', 0, '게임할때 편한의자', '3000원'  );
INSERT INTO PRODUCT (P_NO, TAG_NO, P_NAME, P_SELLER, PRICE, DISCOUNT, SELL_STATUS, STOCK, P_CONTENT, D_PRICE )
VALUES(SEQ_PRO_NO.NEXTVAL, 245, '곰팡이 한팡 제거제', '투팡', 5000, 1 , '판매중', 100, '욕실 곰팡이 한방 제거', '3000원'  );
INSERT INTO PRODUCT (P_NO, TAG_NO, P_NAME, P_SELLER, PRICE, DISCOUNT, SELL_STATUS, STOCK, P_CONTENT, D_PRICE )
VALUES(SEQ_PRO_NO.NEXTVAL, 216, '눌러붙지 않는 후라이팬', '쿠팡', 15000, 0.8 , '판매중', 150, '어떤 음식이든 눌러붙지 않는 완벽한 코팅', '3000원'  );
INSERT INTO PRODUCT (P_NO, TAG_NO, P_NAME, P_SELLER, PRICE, DISCOUNT, SELL_STATUS, STOCK, P_CONTENT, D_PRICE )
VALUES(SEQ_PRO_NO.NEXTVAL, 214, '르반 세라믹식탁 세트 4인용 원목 직각 1400 의자2 벤치', '폴인퍼니', 686000, 1 , '판매중', 100, '내추럴한 분위기 연출이 가능한 책생', '50000원'  );
INSERT INTO PRODUCT (P_NO, TAG_NO, P_NAME, P_SELLER, PRICE, DISCOUNT, SELL_STATUS, STOCK, P_CONTENT, D_PRICE )
VALUES(SEQ_PRO_NO.NEXTVAL, 223, '오스본가구 원조 라티나 구스다운 4인용 소파', '오스본', 409000, 0.9 , '판매중', 100, '단단하면서도 푹신한 쿠션감이 좋고, 등받이 각도를 조절할 수 있습니다.', '50000원'  );
INSERT INTO PRODUCT (P_NO, TAG_NO, P_NAME, P_SELLER, PRICE, DISCOUNT, SELL_STATUS, STOCK, P_CONTENT, D_PRICE )
VALUES(SEQ_PRO_NO.NEXTVAL , 219, '더온 발열도시락(6종) 원터치', '더온', 39900, 1, '판매중', 155, '발열전투식량 군납업체가 만든 간편식 군대밥 비상식량', '무료배송'  );
INSERT INTO PRODUCT (P_NO, TAG_NO, P_NAME, P_SELLER, PRICE, DISCOUNT, SELL_STATUS, STOCK, P_CONTENT, D_PRICE )
VALUES(SEQ_PRO_NO.NEXTVAL , 238, '유탕고구마 1kg 대용량', '푸드야', 11000, 1, '판매중', 95, '간단하게 먹을 수 있는 튀김 고구마', '3000원'  );
INSERT INTO PRODUCT (P_NO, TAG_NO, P_NAME, P_SELLER, PRICE, DISCOUNT, SELL_STATUS, STOCK, P_CONTENT, D_PRICE )
VALUES(SEQ_PRO_NO.NEXTVAL , 247, '차이나타오 크리스마스조명', '차이나타오', 24800, 0.6, '판매중', 515, '유선무선 둘다 사용 가능, 전원을 켜지 않아도 인테리어 소품으로 굿', '무료배송'  );
INSERT INTO PRODUCT (P_NO, TAG_NO, P_NAME, P_SELLER, PRICE, DISCOUNT, SELL_STATUS, STOCK, P_CONTENT, D_PRICE )
VALUES(SEQ_PRO_NO.NEXTVAL , 238, '인조잔디 롤조경', '쉼터프', 275000, 1, '판매중', 555, '롤 조경 베란다 마당 옥상 테라스 매트 시공', '무료배송'  );
INSERT INTO PRODUCT (P_NO, TAG_NO, P_NAME, P_SELLER, PRICE, DISCOUNT, SELL_STATUS, STOCK, P_CONTENT, D_PRICE )
VALUES(SEQ_PRO_NO.NEXTVAL , 227, '오동나무 우드 블라인드 거실 베란다 창문', '창안애', 9800, 1, '판매중', 355, '햇빛차단도 잘 되고 올리고 내리기 편하고 바람도 잘 통합니다.', '무료배송'  );
INSERT INTO PRODUCT (P_NO, TAG_NO, P_NAME, P_SELLER, PRICE, DISCOUNT, SELL_STATUS, STOCK, P_CONTENT, D_PRICE )
VALUES(SEQ_PRO_NO.NEXTVAL , 246, '캠트레이 20가지 컬러', '캠브로', 13000, 1, '판매중', 355, '충경에 강하고 가벼운 유리섬유로 제작, 얼룩과 냄새베임에 강합니다.', '무료배송'  );
INSERT INTO PRODUCT (P_NO, TAG_NO, P_NAME, P_SELLER, PRICE, DISCOUNT, SELL_STATUS, STOCK, P_CONTENT, D_PRICE )
VALUES(SEQ_PRO_NO.NEXTVAL , 216, '땡스소윤 냉동용기 사장님패키기 28p', '땡스소윤', 109000, 1, '판매중', 55, '어떤 냉동실에도 맞춘 듯 스마트하게', '무료배송'  );








-- 리뷰 P_REVIEW
CREATE TABLE P_REVIEW(
    PR_NO NUMBER,
    P_NO NUMBER NOT NULL,
    PR_WRITER NUMBER NOT NULL,
    PR_CONTENT VARCHAR2(4000) NOT NULL,
    PR_RATING NUMBER NOT NULL,
    PR_DATE DATE DEFAULT SYSDATE NOT NULL,
    STATUS CHAR(1) DEFAULT 'Y' NOT NULL,
    CONSTRAINT PK_PRODUCT_REVIEW_NO PRIMARY KEY (PR_NO),
    CONSTRAINT FK_PRODUCT_REVIEW_PRODUCT_NO FOREIGN KEY (P_NO) REFERENCES PRODUCT(P_NO) ON DELETE CASCADE,
    CONSTRAINT FK_PRODUCT_REVIEW_WRITER FOREIGN KEY (PR_WRITER) REFERENCES USER1(USER_NO),
    -- ㄴ> USER1 테이블 명 변경시 변경 필요
    -- CONSTRAINT CHK_PRODUCT_REVIEW_RATING CHECK (PR_RATING BETWEEN 1 AND 5),
    -- ㄴ> 평점을 1에서부터 5까지 매길 수 있게할까 생각해보았으나, 확정된 것이 없으므로 주석처리
    CONSTRAINT CHK_PRODUCT_REVIEW_STATUS CHECK (STATUS IN('Y', 'N'))
)
;
-- 리뷰 시퀀스
CREATE SEQUENCE SEQ_PRODUCT_REVIEW_NO
NOCACHE;
-- 리뷰 커맨트
COMMENT ON COLUMN P_REVIEW.PR_NO IS '리뷰번호';
COMMENT ON COLUMN P_REVIEW.P_NO IS '상품번호';
COMMENT ON COLUMN P_REVIEW.PR_WRITER IS '작성자';
COMMENT ON COLUMN P_REVIEW.PR_CONTENT IS '리뷰내용';
COMMENT ON COLUMN P_REVIEW.PR_RATING IS '별점';
COMMENT ON COLUMN P_REVIEW.PR_DATE IS '작성일';
COMMENT ON COLUMN P_REVIEW.STATUS IS '상태';


--상품 별점을 위한 더미 테이블
CREATE TABLE TRG_PR_RANK_TEST(
    P_NO NUMBER REFERENCES PRODUCT,
    PR_PATING NUMBER
);

CREATE OR REPLACE TRIGGER PT_RANK_TRG
AFTER INSERT ON P_REVIEW
FOR EACH ROW
DECLARE
BEGIN
    INSERT INTO TRG_PR_RANK_TEST VALUES(:NEW.P_NO,:NEW.PR_RATING); 
END;
/



--상품 테이블 리뷰 수 카운트 업 트리거
CREATE OR REPLACE TRIGGER PR_PRODUCT_COUNT_UP
AFTER INSERT ON P_REVIEW
FOR EACH ROW
DECLARE

BEGIN
    UPDATE PRODUCT
       SET PR_COUNT = PR_COUNT+1
     WHERE P_NO = :NEW.P_NO;
END;
/
--상품 테이블 리뷰 수 카운트 다운 트리거
CREATE OR REPLACE TRIGGER PR_PRODUCT_COUNT_DOWN
AFTER DELETE ON P_REVIEW
FOR EACH ROW
DECLARE

BEGIN
    UPDATE PRODUCT
       SET PR_COUNT = PR_COUNT-1
     WHERE P_NO = :OLD.P_NO;
       
END;
/
--상품 테이블 별점   트리거

CREATE OR REPLACE TRIGGER PR_PRODUCT_RATING_TRG
AFTER INSERT ON P_REVIEW
FOR EACH ROW
DECLARE
    NM NUMBER;
BEGIN

    UPDATE PRODUCT
       SET RATING = (SELECT AVG(PR_PATING) FROM TRG_PR_RANK_TEST WHERE P_NO =:NEW.P_NO)
     WHERE P_NO = :NEW.P_NO;
END;
/



-- 리뷰 샘플 데이터 (2, 3번째 외래키)
INSERT INTO P_REVIEW VALUES(SEQ_PRODUCT_REVIEW_NO.NEXTVAL, 1, 1, '간편하고 내구성이 좋아요!', 5, DEFAULT, DEFAULT);
INSERT INTO P_REVIEW VALUES(SEQ_PRODUCT_REVIEW_NO.NEXTVAL, 2, 2, '그럭저럭 쓸만하나 좀 비싸네요', 4, DEFAULT, DEFAULT);
INSERT INTO P_REVIEW VALUES(SEQ_PRODUCT_REVIEW_NO.NEXTVAL, 3, 3, '사용하다가 폭발해서 응급실에 실려갔습니다', 1, DEFAULT, DEFAULT);
INSERT INTO P_REVIEW VALUES(SEQ_PRODUCT_REVIEW_NO.NEXTVAL, 1, 2, '그럭저럭 쓸만하네요', 4, DEFAULT, DEFAULT);
INSERT INTO P_REVIEW VALUES(SEQ_PRODUCT_REVIEW_NO.NEXTVAL, 2, 3, '별로예요', 1, DEFAULT, DEFAULT);



-- 리뷰 사진 PR_IMG
CREATE TABLE PR_IMG(
    PR_IMG_NO NUMBER,
    PR_NO NUMBER NOT NULL REFERENCES P_REVIEW ON DELETE CASCADE,
    ORIGIN_NAME VARCHAR2(255) NOT NULL,
    CHANGE_NAME VARCHAR2(255) NOT NULL,
    FILEPATH VARCHAR2(300) NOT NULL,
   
    UPLOAD_DATE DATE DEFAULT SYSDATE NOT NULL,
    STATUS CHAR(1) DEFAULT 'Y' NOT NULL,
    CONSTRAINT PK_PRODUCT_REVIEW_IMG_NO PRIMARY KEY (PR_IMG_NO),
    
   
    CONSTRAINT CHK_PR_IMG_STATUS CHECK (STATUS IN('Y', 'N'))
);
-- 리뷰 사진 시퀀스
CREATE SEQUENCE SEQ_PRODUCT_REVIEW_IMG_NO
NOCACHE;
-- 사진 경로 통일시 리뷰 사진 시퀀스
--CREATE SEQUENCE SEQ_IMG_NO
--NOCACHE;
-- 리뷰 사진 커맨트
COMMENT ON COLUMN PR_IMG.PR_IMG_NO IS '리뷰사진번호';
COMMENT ON COLUMN PR_IMG.PR_NO IS '리뷰번호';
COMMENT ON COLUMN PR_IMG.ORIGIN_NAME IS '원본명';
COMMENT ON COLUMN PR_IMG.CHANGE_NAME IS '수정명';
COMMENT ON COLUMN PR_IMG.FILEPATH IS '파일경로';

COMMENT ON COLUMN PR_IMG.UPLOAD_DATE IS '업로드날짜';
COMMENT ON COLUMN PR_IMG.STATUS IS '상태';
-- 리뷰 사진 샘플 데이터 (2번째 외래키)
INSERT INTO PR_IMG VALUES(SEQ_PRODUCT_REVIEW_IMG_NO.NEXTVAL, 1, 'worth_it.png', '20240811010203.png', '/resources/bImg/',  DEFAULT, DEFAULT);
INSERT INTO PR_IMG VALUES(SEQ_PRODUCT_REVIEW_IMG_NO.NEXTVAL, 2, 'expensive.jpg', '20240811010204.jpg', '/resources/bImg/',  DEFAULT, DEFAULT);
INSERT INTO PR_IMG VALUES(SEQ_PRODUCT_REVIEW_IMG_NO.NEXTVAL, 3, 'boom.gif', '20240811010205.gif', '/resources/bImg/',  DEFAULT, 'N');
INSERT INTO PR_IMG VALUES(SEQ_PRODUCT_REVIEW_IMG_NO.NEXTVAL, 2, 'expensive.jpg', '20240811010204.jpg', '/resources/bImg/',  DEFAULT, DEFAULT);
INSERT INTO PR_IMG VALUES(SEQ_PRODUCT_REVIEW_IMG_NO.NEXTVAL, 3, 'boom.gif', '20240811010205.gif', '/resources/bImg/',  DEFAULT, 'N');



--상품사진 테이블
CREATE TABLE PRODUCT_IMG(
	P_IMG_NO NUMBER PRIMARY KEY,
	P_NO NUMBER REFERENCES PRODUCT ON DELETE CASCADE,
	ORIGIN_NAME VARCHAR2(255) NOT NULL,
	CHANGE_NAME VARCHAR2(255) NOT NULL,
	FILEPATH VARCHAR2(300) NOT NULL,
	FILE_LEVEL CHAR(1) CHECK(FILE_LEVEL IN (1,2)) NOT NULL ,
	UPLOAD_DATE DATE DEFAULT SYSDATE,
	STATUS CHAR(1) DEFAULT 'Y' CHECK(STATUS IN ('Y','N'))
);

CREATE SEQUENCE SEQ_PRODUCT_IMG
NOCACHE;

COMMENT ON COLUMN PRODUCT_IMG.P_IMG_NO IS '상품사진번호';
COMMENT ON COLUMN PRODUCT_IMG.P_NO IS '상품번호';
COMMENT ON COLUMN PRODUCT_IMG.ORIGIN_NAME IS '원본명';
COMMENT ON COLUMN PRODUCT_IMG.CHANGE_NAME IS '수정명';
COMMENT ON COLUMN PRODUCT_IMG.FILEPATH IS '파일경로';
COMMENT ON COLUMN PRODUCT_IMG.FILE_LEVEL IS '파일타입';
COMMENT ON COLUMN PRODUCT_IMG.UPLOAD_DATE IS '업로드날짜';
COMMENT ON COLUMN PRODUCT_IMG.STATUS IS '상태';

INSERT INTO PRODUCT_IMG (P_IMG_NO, P_NO, ORIGIN_NAME, CHANGE_NAME, FILEPATH , FILE_LEVEL)
VALUES(SEQ_PRODUCT_IMG.NEXTVAL , 1, '첫번째 사진','첫번째 수정명', '/resources/bImg/', 1 );

INSERT INTO PRODUCT_IMG (P_IMG_NO, P_NO, ORIGIN_NAME, CHANGE_NAME, FILEPATH , FILE_LEVEL)
VALUES(SEQ_PRODUCT_IMG.NEXTVAL , 2, '두번째 사진','두번째 수정명', '/resources/bImg/', 2 );

INSERT INTO PRODUCT_IMG (P_IMG_NO, P_NO, ORIGIN_NAME, CHANGE_NAME, FILEPATH , FILE_LEVEL)
VALUES(SEQ_PRODUCT_IMG.NEXTVAL , 3, '세번째 사진','세번째 수정명', '/resources/bImg/', 2 );

INSERT INTO PRODUCT_IMG (P_IMG_NO, P_NO, ORIGIN_NAME, CHANGE_NAME, FILEPATH , FILE_LEVEL)
VALUES(SEQ_PRODUCT_IMG.NEXTVAL , 4, '네번째 사진','네번째 수정명', '/resources/bImg/', 2 );

INSERT INTO PRODUCT_IMG (P_IMG_NO, P_NO, ORIGIN_NAME, CHANGE_NAME, FILEPATH , FILE_LEVEL)
VALUES(SEQ_PRODUCT_IMG.NEXTVAL , 5, '다섯번째 사진','다섯번째 수정명', '/resources/bImg/', 2 );



-- 주문상태 ORDER_STATUS
CREATE TABLE ORDER_STATUS(
    OS_NO NUMBER,
    OS_NAME VARCHAR(15) NOT NULL,
    -- ㄴ> 데이터가 NULL이라면 상태를 타나내는 이 테이블의 존재 의미가 없음
    CONSTRAINT OS_NO PRIMARY KEY (OS_NO)
)
;

-- 주문상태 커맨트
COMMENT ON COLUMN ORDER_STATUS.OS_NO IS '주문상태번호';
COMMENT ON COLUMN ORDER_STATUS.OS_NAME IS '주문상태이름';
-- 주문상태 샘플 데이터
INSERT INTO ORDER_STATUS VALUES(10, '주문접수');
INSERT INTO ORDER_STATUS VALUES(20, '출고처리');
INSERT INTO ORDER_STATUS VALUES(30, '배송중');
INSERT INTO ORDER_STATUS VALUES(40, '배송완료');




-- 주문내역 테이블


CREATE TABLE PRODUCT_ORDER (
   PO_NO NUMBER CONSTRAINT PONO_PK PRIMARY KEY,
    P_NO NUMBER REFERENCES PRODUCT NOT NULL,
   USER_NO   NUMBER REFERENCES USER1 NOT NULL,
    ORDER_STATUS NUMBER REFERENCES ORDER_STATUS NOT NULL,
   ORDER_DATE DATE   DEFAULT SYSDATE NOT NULL,
   STATUS CHAR(1) DEFAULT 'Y' CHECK(STATUS IN ('Y','N'))
);

COMMENT ON COLUMN PRODUCT_ORDER.PO_NO IS '주문번호';
COMMENT ON COLUMN PRODUCT_ORDER.P_NO IS '상품번호';
COMMENT ON COLUMN PRODUCT_ORDER.USER_NO IS '회원번호';
COMMENT ON COLUMN PRODUCT_ORDER.ORDER_STATUS IS '주문상태';
COMMENT ON COLUMN PRODUCT_ORDER.ORDER_DATE IS '주문날짜';
COMMENT ON COLUMN PRODUCT_ORDER.STATUS IS '상태';


CREATE SEQUENCE SEQ_PONO NOCACHE;
-- 숫자들 FOREIGN KEY 지영 상품테이블(PRODUCT)/ 마예 회원테이블(USER1) / 경원 주문상태테이블(ORDER_STATUS) /
INSERT INTO PRODUCT_ORDER VALUES(SEQ_PONO.NEXTVAL, 1, 1, 10, SYSDATE, 'Y');
INSERT INTO PRODUCT_ORDER VALUES (SEQ_PONO.NEXTVAL, 2, 2, 10, SYSDATE, DEFAULT);
INSERT INTO PRODUCT_ORDER VALUES (SEQ_PONO.NEXTVAL, 3, 3, 20, SYSDATE, DEFAULT);
INSERT INTO PRODUCT_ORDER VALUES (SEQ_PONO.NEXTVAL, 4, 4, 10, SYSDATE, DEFAULT);
INSERT INTO PRODUCT_ORDER VALUES (SEQ_PONO.NEXTVAL, 5, 5, 30, SYSDATE, DEFAULT);




-- 상품문의 PRODUCT_INQUIRY
CREATE TABLE PRODUCT_INQUIRY(
    PI_NO NUMBER,
    P_NO NUMBER NOT NULL,
    USER_NO NUMBER NOT NULL,
    PI_TITLE VARCHAR2(200) NOT NULL,
    PI_CONTENT VARCHAR2(4000) NOT NULL,
    CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
    IS_PRIVATE CHAR(1) DEFAULT 'N' NOT NULL,
    -- ㄴ> 비공개여부를 기본적으로 N으로 설정하게 만듬(기본값=공개)
    ANSWER CHAR(1) DEFAULT 'N' NOT NULL,
    STATUS CHAR(1) DEFAULT 'Y' NOT NULL,
    CONSTRAINT PK_PRODUCT_INQUIRY PRIMARY KEY (PI_NO),
    CONSTRAINT FK_PRODUCT_INQUIRY_PRODUCT_NO FOREIGN KEY (P_NO) REFERENCES PRODUCT(P_NO) ON DELETE CASCADE,
    CONSTRAINT FK_PRODUCT_INQUIRY_USER_NO FOREIGN KEY (USER_NO) REFERENCES USER1(USER_NO),
    -- ㄴ> USER1 테이블명 변경시 변경 필요
    CONSTRAINT CHK_PRODUCT_INQUIRY_PRIVATE CHECK (IS_PRIVATE IN('Y', 'N')),
    CONSTRAINT CHK_PRODUCT_INQUIRY_ANSWER CHECK (ANSWER IN('Y', 'N')),
    CONSTRAINT CHK_PRODUCT_INQUIRY_STATUS CHECK (STATUS IN('Y', 'N'))
)
;
-- 상품문의 시퀀스
CREATE SEQUENCE SEQ_PRODUCT_INQUIRY_NO
NOCACHE;
-- 상품문의 커맨트
COMMENT ON COLUMN PRODUCT_INQUIRY.PI_NO IS '상품문의번호';
COMMENT ON COLUMN PRODUCT_INQUIRY.P_NO IS '상품번호';
COMMENT ON COLUMN PRODUCT_INQUIRY.USER_NO IS '회원번호';
COMMENT ON COLUMN PRODUCT_INQUIRY.PI_TITLE IS '문의제목';
COMMENT ON COLUMN PRODUCT_INQUIRY.PI_CONTENT IS '문의내용';
COMMENT ON COLUMN PRODUCT_INQUIRY.CREATE_DATE IS '작성일';
COMMENT ON COLUMN PRODUCT_INQUIRY.IS_PRIVATE IS '비공개여부';
COMMENT ON COLUMN PRODUCT_INQUIRY.ANSWER IS '답변여부';
COMMENT ON COLUMN PRODUCT_INQUIRY.STATUS IS '상태';
-- 상품문의 샘플 데이터 (2, 3번째 외래키)
INSERT INTO PRODUCT_INQUIRY VALUES(SEQ_PRODUCT_INQUIRY_NO.NEXTVAL, 1, 1, '환불했는데 아직 돈을 못 받았어요', '안녕하세요, 상품 주문하고 착오가 있어서 바로 취소했는데 환불이 진행이 안 돼요 확인 부탁할게요', DEFAULT, DEFAULT, 'Y', DEFAULT);
INSERT INTO PRODUCT_INQUIRY VALUES(SEQ_PRODUCT_INQUIRY_NO.NEXTVAL, 2, 2, '상품이 파손된채로 나왔어요', '일 그렇게하지 마세요 블라블라', DEFAULT, 'Y', 'Y', DEFAULT);
INSERT INTO PRODUCT_INQUIRY VALUES(SEQ_PRODUCT_INQUIRY_NO.NEXTVAL, 3, 3, '파손된 제품 반품 되나요?', '반품 요청해주세요 제발 부탁드립니다.', DEFAULT, 'Y', DEFAULT, DEFAULT);
INSERT INTO PRODUCT_INQUIRY VALUES(SEQ_PRODUCT_INQUIRY_NO.NEXTVAL, 2, 2, '사이즈 있나요', '더 큰사이즈 있나요?', DEFAULT, 'Y', 'Y', DEFAULT);
INSERT INTO PRODUCT_INQUIRY VALUES(SEQ_PRODUCT_INQUIRY_NO.NEXTVAL, 3, 3, 'AS 가능한가요?', 'AS 가능한가요?', DEFAULT, 'Y', DEFAULT, DEFAULT);


-- 상품문의답변 PRODUCT_ANSWER
CREATE TABLE PRODUCT_ANSWER(
    PA_NO NUMBER,
    PI_NO NUMBER NOT NULL,
    PA_CONTENT VARCHAR2(4000) NOT NULL,
    STATUS CHAR(1) DEFAULT 'Y' NOT NULL,
    CONSTRAINT PK_PRODUCT_ANSWER_NO PRIMARY KEY (PA_NO),
    CONSTRAINT FK_PRODUCT_ANSWER_INQUIRY_NO FOREIGN KEY (PI_NO) REFERENCES PRODUCT_INQUIRY(PI_NO) ON DELETE CASCADE,
    CONSTRAINT CHK_PRODUCT_ANSWER_STATUS CHECK (STATUS IN('Y', 'N'))
)
;
-- 상품문의답변 시퀀스
CREATE SEQUENCE SEQ_PRODUCT_ANSWER_NO
NOCACHE;
-- 상품문의답변 커맨트
COMMENT ON COLUMN PRODUCT_ANSWER.PA_NO IS '상품문의답변번호';
COMMENT ON COLUMN PRODUCT_ANSWER.PI_NO IS '상품문의번호';
COMMENT ON COLUMN PRODUCT_ANSWER.PA_CONTENT IS '답변내용';
COMMENT ON COLUMN PRODUCT_ANSWER.STATUS IS '상태';
-- 상품문의답변 샘플 데이터 (2번째 외래키)
INSERT INTO PRODUCT_ANSWER VALUES(SEQ_PRODUCT_ANSWER_NO.NEXTVAL, 1, '처리 완료됐습니다. 이용에 불편을 드려서 대단히 죄송합니다.', DEFAULT);
INSERT INTO PRODUCT_ANSWER VALUES(SEQ_PRODUCT_ANSWER_NO.NEXTVAL, 2, '니가 부쉈냐?', DEFAULT);
INSERT INTO PRODUCT_ANSWER VALUES(SEQ_PRODUCT_ANSWER_NO.NEXTVAL, 3, '니가 부쉈으면 반품 안된다', DEFAULT);
INSERT INTO PRODUCT_ANSWER VALUES(SEQ_PRODUCT_ANSWER_NO.NEXTVAL, 4, '없습니다', DEFAULT);
INSERT INTO PRODUCT_ANSWER VALUES(SEQ_PRODUCT_ANSWER_NO.NEXTVAL, 5, '안됩니다.', DEFAULT);




-- 14. 찜하기
CREATE TABLE CHOOSE(
    USER_NO NUMBER REFERENCES USER1 ON DELETE CASCADE,
    P_NO NUMBER REFERENCES PRODUCT ON DELETE CASCADE,
    C_DATE DATE DEFAULT SYSDATE,
    PRIMARY KEY(USER_NO,P_NO)
    
);

COMMENT ON COLUMN CHOOSE.USER_NO IS '사용자';
COMMENT ON COLUMN CHOOSE.P_NO IS '찜한 상품';
COMMENT ON COLUMN CHOOSE.C_DATE IS '찜한날짜';
--상품 테이블 찜한 수 카운트 업 트리거
CREATE OR REPLACE TRIGGER PR_CHOOSE_COUNT_UP
AFTER INSERT ON CHOOSE
FOR EACH ROW
DECLARE

BEGIN
    UPDATE PRODUCT
       SET CHOOSE_COUNT = CHOOSE_COUNT+1
     WHERE P_NO = :NEW.P_NO;
END;
/
--상품 테이블 찜한 수 카운트 다운 트리거
CREATE OR REPLACE TRIGGER PR_CHOOSE_COUNT_DOWN
AFTER DELETE ON CHOOSE
FOR EACH ROW
DECLARE

BEGIN
    UPDATE PRODUCT
       SET CHOOSE_COUNT = CHOOSE_COUNT-1
     WHERE P_NO = :OLD.P_NO;
       
END;
/


INSERT INTO CHOOSE (USER_NO, P_NO)
VALUES(1 , 1);
INSERT INTO CHOOSE (USER_NO, P_NO)
VALUES(2 , 2);
INSERT INTO CHOOSE (USER_NO, P_NO)
VALUES(3 , 3);
INSERT INTO CHOOSE (USER_NO, P_NO)
VALUES(4 , 4);
INSERT INTO CHOOSE (USER_NO, P_NO)
VALUES(5 , 5);



-- 15. 수입테이블
CREATE TABLE INCOME(
	INCOME_NO NUMBER PRIMARY KEY,
	IN_AMOUNT NUMBER NOT NULL,
	IN_DATE DATE NOT NULL,
	IN_DES VARCHAR2(100),
	CATEGORY_NO NUMBER REFERENCES CATEGORY ON DELETE SET NULL,
	USER_NO NUMBER REFERENCES CATEGORY ON DELETE SET NULL,
	STATUS CHAR(1) DEFAULT 'Y' CHECK(STATUS IN ('Y','N'))
);

COMMENT ON COLUMN INCOME.INCOME_NO IS '수입번호';
COMMENT ON COLUMN INCOME.IN_AMOUNT IS '수입 금액';
COMMENT ON COLUMN INCOME.IN_DATE IS '수입 날짜';
COMMENT ON COLUMN INCOME.IN_DES IS '수입날짜';
COMMENT ON COLUMN INCOME.CATEGORY_NO IS '카테고리 넘버';
COMMENT ON COLUMN INCOME.USER_NO IS '회원번호';
COMMENT ON COLUMN INCOME.STATUS IS '상태';


CREATE SEQUENCE SEQ_INCOME
NOCACHE;

INSERT INTO INCOME (INCOME_NO, IN_AMOUNT, IN_DATE , IN_DES, CATEGORY_NO, USER_NO )
VALUES(SEQ_INCOME.NEXTVAL , 10000 , SYSDATE , '세벳돈', 1, 1);

INSERT INTO INCOME (INCOME_NO, IN_AMOUNT, IN_DATE , IN_DES, CATEGORY_NO, USER_NO )
VALUES(SEQ_INCOME.NEXTVAL , 12000 , SYSDATE , '빌려준돈 받음', 1, 2);

INSERT INTO INCOME (INCOME_NO, IN_AMOUNT, IN_DATE , IN_DES, CATEGORY_NO, USER_NO )
VALUES(SEQ_INCOME.NEXTVAL , 1000 , SYSDATE , '길가다 주움', 1, 2);

INSERT INTO INCOME (INCOME_NO, IN_AMOUNT, IN_DATE , IN_DES, CATEGORY_NO, USER_NO )
VALUES(SEQ_INCOME.NEXTVAL , 5000 , SYSDATE , '복권 5000원짜리 당첨...', 1, 2);

INSERT INTO INCOME (INCOME_NO, IN_AMOUNT, IN_DATE , IN_DES, CATEGORY_NO, USER_NO )
VALUES(SEQ_INCOME.NEXTVAL , 25000 , SYSDATE , '당근 거래', 1, 3);



-- 16. 최근본 상품



CREATE TABLE RECENTLY_PRODUCT (
    P_NO NUMBER  NOT NULL REFERENCES PRODUCT,
	USER_NO	NUMBER NOT NULL REFERENCES USER1,
	LATELY_DATE	DATE DEFAULT SYSDATE NOT NULL,
    PRIMARY KEY(P_NO, USER_NO)
);

COMMENT ON COLUMN RECENTLY_PRODUCT.P_NO IS '상품번호';
COMMENT ON COLUMN RECENTLY_PRODUCT.USER_NO IS '회원번호';
COMMENT ON COLUMN RECENTLY_PRODUCT.LATELY_DATE IS '본날짜';

INSERT INTO RECENTLY_PRODUCT VALUES(1, 1, SYSDATE);
INSERT INTO RECENTLY_PRODUCT VALUES(2, 2, SYSDATE);
INSERT INTO RECENTLY_PRODUCT VALUES(3, 3, SYSDATE);
INSERT INTO RECENTLY_PRODUCT VALUES(4, 4, SYSDATE);
INSERT INTO RECENTLY_PRODUCT VALUES(5, 5, SYSDATE);



--장바구니
CREATE TABLE BASKET(
	USER_NO NUMBER,
	P_NO NUMBER,
	B_DATE DATE	DEFAULT SYSDATE,
    PRIMARY KEY(USER_NO, P_NO),
    CONSTRAINT FK_USER_NO FOREIGN KEY(USER_NO) REFERENCES USER1(USER_NO) ON DELETE CASCADE,
    CONSTRAINT FK_P_NO FOREIGN KEY(P_NO) REFERENCES PRODUCT(P_NO) ON DELETE CASCADE
);


-- 장바구니 코멘트
COMMENT ON COLUMN BASKET.USER_NO IS '회원 번호';
COMMENT ON COLUMN BASKET.P_NO IS '상품 번호';
COMMENT ON COLUMN BASKET.B_DATE IS '장바구니 등록 날짜';


-- 장바구니 임의 데이터
INSERT INTO BASKET
VALUES(1,1 , DEFAULT);

INSERT INTO BASKET
VALUES(2, 2, DEFAULT);

INSERT INTO BASKET
VALUES(3, 3, DEFAULT);

INSERT INTO BASKET
VALUES(1, 4, DEFAULT);

INSERT INTO BASKET
VALUES(2, 5, DEFAULT);







-- 17. 중고 테이블
CREATE TABLE BOARD_USED(
	USED_NO	NUMBER CONSTRAINT PK_USED_NO PRIMARY KEY,
	BOARD_NO NUMBER NOT NULL,
	MODEL_NO VARCHAR2(100) NOT NULL,
	PRICE NUMBER NOT NULL,
	MODEL_STATUS VARCHAR2(15),
	TRADING_AREA VARCHAR2(100),
	TRADING_METHOD VARCHAR2(100),
	SELL_STATUS	CHAR(1)	DEFAULT 'N' CHECK(SELL_STATUS IN('Y','N')),
    CONSTRAINT FK_BOARD_NO2 FOREIGN KEY(BOARD_NO) REFERENCES BOARD(BOARD_NO) ON DELETE CASCADE
);


-- 중고 번호 시퀀스 생성
CREATE SEQUENCE SEQ_USEDNO NOCACHE;


-- 중고 코멘트
COMMENT ON COLUMN BOARD_USED.USED_NO IS '중고 번호';
COMMENT ON COLUMN BOARD_USED.BOARD_NO IS '게시글 번호';
COMMENT ON COLUMN BOARD_USED.MODEL_NO IS '모델명';
COMMENT ON COLUMN BOARD_USED.PRICE IS '가격';
COMMENT ON COLUMN BOARD_USED.MODEL_STATUS IS '제품상태';
COMMENT ON COLUMN BOARD_USED.TRADING_AREA IS '거래지역';
COMMENT ON COLUMN BOARD_USED.TRADING_METHOD IS '거래방법';
COMMENT ON COLUMN BOARD_USED.SELL_STATUS IS '판매완료여부';


-- 중고 임의 데이터 : 2번 데이터 외래키 알맞게 변경해서 입력 필수
INSERT INTO BOARD_USED
VALUES (SEQ_USEDNO.NEXTVAL, 1, 'Samsung Galaxy S21', 450000, '상태 좋음', '서울', '직거래', DEFAULT);

INSERT INTO BOARD_USED
VALUES (SEQ_USEDNO.NEXTVAL, 2, 'Apple MacBook Pro 16"', 1500000, '양호', '부산', '택배', DEFAULT);

INSERT INTO BOARD_USED
VALUES (SEQ_USEDNO.NEXTVAL, 3, 'Sony PlayStation 5', 550000, '미개봉', '인천', '직거래', DEFAULT);

INSERT INTO BOARD_USED
VALUES (SEQ_USEDNO.NEXTVAL, 4, 'LG OLED TV 55"', 1200000, '상태 좋음', '대구', '택배', DEFAULT);

INSERT INTO BOARD_USED
VALUES (SEQ_USEDNO.NEXTVAL, 5, 'Canon EOS R5', 3200000, '우수', '대전', '직거래', DEFAULT);




-- 중개사무소 BROKERAGE

CREATE TABLE BROKERAGE(
    B_NO NUMBER PRIMARY KEY,
    B_NAME VARCHAR2(100) NOT NULL,
    B_TYPE CHAR(1) NOT NULL,
    B_PHONE VARCHAR2(13) NOT NULL,
    PRESIDENT VARCHAR2(20) NOT NULL,
    B_BNO VARCHAR2(20) NOT NULL,
    B_LOCATION VARCHAR2(100),
    B_RATING NUMBER DEFAULT 0,
    B_BR_BEST VARCHAR2(4000) DEFAULT '',
    ENROLL_DATE DATE DEFAULT SYSDATE NOT NULL,
    -- ㄴ> 사무소명, 타입, 사무소연락처, 대표자, 사업자번호, 등록일 NOT NULL로 지정
    STATUS CHAR(1) DEFAULT 'Y' NOT NULL,
    CONSTRAINT CHK_BROKERAGE_TYPE CHECK (B_TYPE IN ('1', '2')),
    -- ㄴ> 중개사무소의 종류를 얼마나 나뉠지는 확실하지 않으므로 1과 2로만 일단 구분 가능하게 적용
    CONSTRAINT CHK_BROKERAGE_STATUS CHECK (STATUS IN ('Y', 'N'))
)
;
-- 중개사무소 시퀀스
CREATE SEQUENCE SEQ_BROKERAGE_NO
NOCACHE;
-- 일정 커맨트
COMMENT ON COLUMN BROKERAGE.B_NO IS '사무소번호';
COMMENT ON COLUMN BROKERAGE.B_NAME IS '사무소명';
COMMENT ON COLUMN BROKERAGE.B_TYPE IS '타입';
COMMENT ON COLUMN BROKERAGE.B_PHONE IS '사무소연락처';
COMMENT ON COLUMN BROKERAGE.PRESIDENT IS '대표자';
COMMENT ON COLUMN BROKERAGE.B_BNO IS '사업자번호';
COMMENT ON COLUMN BROKERAGE.B_LOCATION IS '사무소위치'; --
COMMENT ON COLUMN BROKERAGE.B_RATING IS '중개업 별점'; --

COMMENT ON COLUMN BROKERAGE.ENROLL_DATE IS '등록일';
COMMENT ON COLUMN BROKERAGE.STATUS IS '상태';
-- 중개사무소 샘플 데이터
INSERT INTO BROKERAGE VALUES(SEQ_BROKERAGE_NO.NEXTVAL, '만원중개사무소', '1', '010-1111-1111', '김사람', '111-11-11111', '좋은곳',0,DEFAULT, DEFAULT,DEFAULT);
INSERT INTO BROKERAGE VALUES(SEQ_BROKERAGE_NO.NEXTVAL, '천원중개사무소', '1', '010-2222-2222', '쿨가이', '222-22-22222', '어딘가',0, DEFAULT,DEFAULT,DEFAULT);
INSERT INTO BROKERAGE(B_NO, B_NAME, B_TYPE, B_PHONE, PRESIDENT, B_BNO, STATUS) VALUES(SEQ_BROKERAGE_NO.NEXTVAL, '그냥중개사무소', '1', '010-3333-3333', '김인간', '333-33-33333', DEFAULT);

INSERT INTO BROKERAGE(B_NO, B_NAME, B_TYPE, B_PHONE, PRESIDENT, B_BNO) 
VALUES(SEQ_BROKERAGE_NO.NEXTVAL, '이사업체1', '2', '010-3333-4444', '김이사', '444-33-33333');

INSERT INTO BROKERAGE(B_NO, B_NAME, B_TYPE, B_PHONE, PRESIDENT, B_BNO) 
VALUES(SEQ_BROKERAGE_NO.NEXTVAL, '이사업체2', '2', '010-3333-555', '김이사', '444-33-55555');



--중개업 사진
CREATE TABLE B_IMG(
    B_IMG_NO NUMBER PRIMARY KEY,
    B_NO NUMBER REFERENCES BROKERAGE ON DELETE CASCADE,
    ORIGIN_NAME VARCHAR2(255) NOT NULL,
    CHANGE_NAME VARCHAR2(255) NOT NULL,
    FILEPATH VARCHAR2(300) NOT NULL,
    FILE_LEVEL NUMBER CHECK(FILE_LEVEL IN(1,2)),
    UPLOAD_DATE DATE DEFAULT SYSDATE,
    STATUS CHAR(1)  DEFAULT 'Y' CHECK(STATUS IN('Y','N'))
);

COMMENT ON COLUMN B_IMG.B_IMG_NO IS '중개업 사진 번호';
COMMENT ON COLUMN B_IMG.B_NO IS '중개업 번호 ';
COMMENT ON COLUMN B_IMG.ORIGIN_NAME IS '원본명';
COMMENT ON COLUMN B_IMG.CHANGE_NAME IS '수정명';
COMMENT ON COLUMN B_IMG.FILEPATH IS '파일경로';
COMMENT ON COLUMN B_IMG.FILE_LEVEL IS '썸네일 여부';
COMMENT ON COLUMN B_IMG.UPLOAD_DATE IS '등록날짜';
COMMENT ON COLUMN B_IMG.STATUS IS '중개업 리뷰 사진 상태';


CREATE SEQUENCE SEQ_B_IMG
NOCACHE;



INSERT INTO B_IMG (B_IMG_NO, B_NO, ORIGIN_NAME, CHANGE_NAME, FILEPATH , FILE_LEVEL)
VALUES(SEQ_B_IMG.NEXTVAL , 1, '첫번째 중개업사진','첫번째 수정명', '/resources/bImg/', 1 );

INSERT INTO B_IMG (B_IMG_NO, B_NO, ORIGIN_NAME, CHANGE_NAME, FILEPATH , FILE_LEVEL)
VALUES(SEQ_B_IMG.NEXTVAL , 1, '두번째 중개업사진','두번째 수정명', '/resources/bImg/', 2 );

INSERT INTO B_IMG (B_IMG_NO, B_NO, ORIGIN_NAME, CHANGE_NAME, FILEPATH , FILE_LEVEL)
VALUES(SEQ_B_IMG.NEXTVAL , 1, '세번째 중개업사진','세번째 수정명', '/resources/bImg/', 2 );

INSERT INTO B_IMG (B_IMG_NO, B_NO, ORIGIN_NAME, CHANGE_NAME, FILEPATH , FILE_LEVEL)
VALUES(SEQ_B_IMG.NEXTVAL , 2, '네번째 중개업사진','네번째 수정명', '/resources/bImg/', 2 );

INSERT INTO B_IMG (B_IMG_NO, B_NO, ORIGIN_NAME, CHANGE_NAME, FILEPATH , FILE_LEVEL)
VALUES(SEQ_B_IMG.NEXTVAL , 1, '다섯번째 중개업사진','다섯번째 수정명', '/resources/bImg/', 2 );


-- 중개업 리뷰 테이블
CREATE TABLE B_REVIEW(
	BR_NO NUMBER CONSTRAINT PK_BR_NO PRIMARY KEY,
	BR_WRITER NUMBER NOT NULL REFERENCES USER1 ON DELETE SET NULL,
	B_NO NUMBER NOT NULL,
	BR_CONTENT VARCHAR2(4000) NOT NULL,
	BR_RATING NUMBER,
	BR_DATE	DATE DEFAULT SYSDATE NOT NULL,
	STATUS CHAR(1) DEFAULT 'Y' CHECK(STATUS IN('Y','N')),
    CONSTRAINT FK_B_NO FOREIGN KEY(B_NO) REFERENCES BROKERAGE(B_NO) ON DELETE CASCADE
);


-- 중개업 리뷰 시퀀스 생성
CREATE SEQUENCE SEQ_BRNO
NOCACHE;



-- 중개업 리뷰 코멘트
COMMENT ON COLUMN B_REVIEW.BR_NO IS '리뷰 번호';
COMMENT ON COLUMN B_REVIEW.BR_WRITER IS '회원 번호';
COMMENT ON COLUMN B_REVIEW.B_NO IS '사무소 번호';
COMMENT ON COLUMN B_REVIEW.BR_CONTENT IS '리뷰 내용';
COMMENT ON COLUMN B_REVIEW.BR_RATING IS '리뷰 점수';
COMMENT ON COLUMN B_REVIEW.BR_DATE IS '등록일';
COMMENT ON COLUMN B_REVIEW.STATUS IS '중개업 리뷰 상태';


-- 중개업 리뷰 임의 데이터 : 2,3번 데이터는 외래키 사용이므로 알맞게 변경 해야함
INSERT INTO B_REVIEW
VALUES (SEQ_BRNO.NEXTVAL, 1, 1, '친절하고 신속한 서비스 덕분에 편리하게 거래를 마칠 수 있었습니다.', 5, DEFAULT, DEFAULT);

INSERT INTO B_REVIEW
VALUES (SEQ_BRNO.NEXTVAL, 2, 2, '사무소 위치가 좋아서 접근성이 좋았습니다. 다음에도 이용할 의향이 있습니다.', 4, DEFAULT, DEFAULT);

INSERT INTO B_REVIEW
VALUES (SEQ_BRNO.NEXTVAL, 3, 3, '상담 과정에서 친절하게 설명해주셔서 만족스러웠습니다.', 5, DEFAULT, DEFAULT);

INSERT INTO B_REVIEW
VALUES (SEQ_BRNO.NEXTVAL, 1, 4, '다소 느린 응대가 아쉬웠지만, 전반적으로는 괜찮았습니다.', 3, DEFAULT, DEFAULT);

INSERT INTO B_REVIEW
VALUES (SEQ_BRNO.NEXTVAL, 2, 5, '가격 대비 만족스러운 서비스를 제공받았습니다.', 4, DEFAULT, DEFAULT);




-- 중개업 리뷰 사진 테이블
CREATE TABLE BR_IMG(
	BR_IMG_NO NUMBER CONSTRAINT PK_BR_IMG_NO PRIMARY KEY,
	BR_NO NUMBER NOT NULL,
	ORIGIN_NAME	VARCHAR2(255) NOT NULL,
	CHANGE_NAME	VARCHAR2(255) NOT NULL,
	FILEPATH VARCHAR2(300),
	UPLOAD_DATE	DATE DEFAULT SYSDATE NOT NULL,
	STATUS	CHAR(1)	DEFAULT 'Y' CHECK(STATUS IN('Y','N')),
    CONSTRAINT FK_BR_NO FOREIGN KEY(BR_NO) REFERENCES B_REVIEW(BR_NO) ON DELETE CASCADE
);


-- 중개업 리뷰 사진 시퀀스 생성
CREATE SEQUENCE SEQ_BRINO
NOCACHE;


-- 중개업 리뷰 사진 코멘트
COMMENT ON COLUMN BR_IMG.BR_IMG_NO IS '중개업 리뷰 사진 번호';
COMMENT ON COLUMN BR_IMG.BR_NO IS '리뷰 번호 ';
COMMENT ON COLUMN BR_IMG.ORIGIN_NAME IS '원본명';
COMMENT ON COLUMN BR_IMG.CHANGE_NAME IS '수정명';
COMMENT ON COLUMN BR_IMG.FILEPATH IS '파일경로';
COMMENT ON COLUMN BR_IMG.UPLOAD_DATE IS '등록일';
COMMENT ON COLUMN BR_IMG.STATUS IS '중개업 리뷰 사진 상태';


-- 중개업 리뷰 사진 임의 데이터 : 2번 데이터 외래키 값이므로 알맞게 변경
INSERT INTO BR_IMG
VALUES (SEQ_BRINO.NEXTVAL, 1, 'office1.jpg', 'office1_resized.jpg', '/resources/bImg/', DEFAULT, DEFAULT);

INSERT INTO BR_IMG
VALUES (SEQ_BRINO.NEXTVAL, 2, 'interior1.jpg', 'interior1_edited.jpg', '/resources/bImg/', DEFAULT, DEFAULT);

INSERT INTO BR_IMG
VALUES (SEQ_BRINO.NEXTVAL, 3, 'building_front.jpg', 'building_front_optimized.jpg', '/resources/bImg/', DEFAULT, DEFAULT);

INSERT INTO BR_IMG
VALUES (SEQ_BRINO.NEXTVAL, 4, 'room_view.jpg', 'room_view_final.jpg', '/resources/bImg/', DEFAULT, DEFAULT);

INSERT INTO BR_IMG
VALUES (SEQ_BRINO.NEXTVAL, 5, 'amenities.jpg', 'amenities_enhanced.jpg', '/resources/bImg/', DEFAULT, DEFAULT);






--부동산매물 테이블
CREATE TABLE PROPERTY(
	PP_NO NUMBER PRIMARY KEY,
	PP_NAME VARCHAR2(200) NOT NULL,
	TAG_NO NUMBER REFERENCES TAG ON DELETE SET NULL,
	B_NO NUMBER REFERENCES BROKERAGE ON DELETE SET NULL,
	PP_PRICE VARCHAR2(100) NOT NULL,
	PP_LOCATION VARCHAR2(200) NOT NULL,
	PP_COUNT NUMBER DEFAULT 0 ,
	PP_OPTION VARCHAR2(1000) ,
	PP_INFO  VARCHAR2(1000),
	PP_DATE DATE DEFAULT SYSDATE,
	STATUS CHAR(1) DEFAULT 'Y' CHECK(STATUS IN ('Y','N'))
);
COMMENT ON COLUMN PROPERTY.PP_NO IS '매물번호';
COMMENT ON COLUMN PROPERTY.PP_NAME IS '매물명';
COMMENT ON COLUMN PROPERTY.PP_PRICE IS '가격';
COMMENT ON COLUMN PROPERTY.TAG_NO IS '태그번호';
COMMENT ON COLUMN PROPERTY.B_NO IS '사무소번호';
COMMENT ON COLUMN PROPERTY.PP_LOCATION IS '위치';
COMMENT ON COLUMN PROPERTY.PP_COUNT IS '조회수';
COMMENT ON COLUMN PROPERTY.PP_OPTION IS '옵션';
COMMENT ON COLUMN PROPERTY.PP_INFO IS '주변정보';
COMMENT ON COLUMN PROPERTY.PP_DATE IS '등록일';
COMMENT ON COLUMN PROPERTY.STATUS IS '상태';


CREATE SEQUENCE SEQ_PROPERTY
NOCACHE;

INSERT INTO PROPERTY (PP_NO, PP_NAME , B_NO, TAG_NO, PP_PRICE, PP_LOCATION, PP_OPTION, PP_INFO)
VALUES(SEQ_PROPERTY.NEXTVAL , '자이아파트', 1,321, '10억', '반포', '에어컨,세탁기','편의점,역세권' );

INSERT INTO PROPERTY (PP_NO, PP_NAME , B_NO, TAG_NO, PP_PRICE, PP_LOCATION, PP_OPTION, PP_INFO)
VALUES(SEQ_PROPERTY.NEXTVAL , '레미안아파트', 1,311, '8억', '전농동', '에어컨,전자레인지,세탁기','편의점,역세권,헬스장' );

INSERT INTO PROPERTY (PP_NO, PP_NAME , B_NO, TAG_NO, PP_PRICE, PP_LOCATION, PP_OPTION, PP_INFO)
VALUES(SEQ_PROPERTY.NEXTVAL , '주택', 1,312, '3천/300', '신림동', NULL,'편의점' );

INSERT INTO PROPERTY (PP_NO, PP_NAME , B_NO, TAG_NO, PP_PRICE, PP_LOCATION, PP_OPTION, PP_INFO)
VALUES(SEQ_PROPERTY.NEXTVAL , '쌍용아파트', 2,321, '5억', '성수', '에어컨,세탁기','헬스장,역세권' );

INSERT INTO PROPERTY (PP_NO, PP_NAME , B_NO, TAG_NO, PP_PRICE, PP_LOCATION, PP_OPTION, PP_INFO)
VALUES(SEQ_PROPERTY.NEXTVAL , '두산아파트', 2,321, '5억', '서울역', '에어컨,세탁기','편의점,공원,헬스장,역세권' );






--매물상세
CREATE TABLE PROPERTY_DETAIL(
    PD_NO NUMBER,
    PP_NO NUMBER NOT NULL,
    COST NUMBER NOT NULL,
    -- ㄴ> 결론적으로 금액을 나타내므로 숫자로 지정
    FLOOR NUMBER,
    -- ㄴ> 층의 수를 나타내므로 숫자로 지정
    PYEONG NUMBER,
    -- ㄴ> SIZE로 이름을 지정 불가능하므로 PYEONG으로 이름 대체
    ROOMS NUMBER,
    -- 방의 수를 나타내므로 숫자로 지정
    DIRECTION VARCHAR2(2),
    -- 방향을 총 8 방향으로만 지정 가능하게 지정, 하단의 제약조건 참조
    HEATING VARCHAR2(20),
    ELEVATOR CHAR(1) DEFAULT 'N' NOT NULL,
    -- 기본값 N(없음)으로 지정
    TOTAL_HOUSEHOLDS NUMBER,
    PARKING NUMBER,
    MOVE_DATE DATE,
    CONSTRAINT PK_PROPERTY_DETAIL_NO PRIMARY KEY (PD_NO),
    CONSTRAINT FK_PROPERTY_DETAIL_PROPERTY_NO FOREIGN KEY (PP_NO) REFERENCES PROPERTY(PP_NO) ON DELETE CASCADE,
    CONSTRAINT CHK_PROPERTY_DETAIL_ELEVATOR CHECK (ELEVATOR IN('Y', 'N')),
    CONSTRAINT CHK_PROPERTY_DETAIL_DIRECTION CHECK (DIRECTION IN('N', 'S', 'E', 'W', 'NE', 'NW', 'SE', 'SW'))
);
-- 매물 상세정보 시퀀스
CREATE SEQUENCE SEQ_PROPERTY_DETAIL_NO
NOCACHE;
-- 매물 상세정보 커맨트
COMMENT ON COLUMN PROPERTY_DETAIL.PD_NO IS '매물상세정보번호';
COMMENT ON COLUMN PROPERTY_DETAIL.PP_NO IS '매물번호';
COMMENT ON COLUMN PROPERTY_DETAIL.COST IS '관리비';
COMMENT ON COLUMN PROPERTY_DETAIL.FLOOR IS '층수';
COMMENT ON COLUMN PROPERTY_DETAIL.PYEONG IS '평수';
COMMENT ON COLUMN PROPERTY_DETAIL.ROOMS IS '방수';
COMMENT ON COLUMN PROPERTY_DETAIL.DIRECTION IS '방향';
COMMENT ON COLUMN PROPERTY_DETAIL.HEATING IS '난방종류';
COMMENT ON COLUMN PROPERTY_DETAIL.ELEVATOR IS '엘리베이터';
COMMENT ON COLUMN PROPERTY_DETAIL.TOTAL_HOUSEHOLDS IS '총세대수';
COMMENT ON COLUMN PROPERTY_DETAIL.PARKING IS '총주차대수';
COMMENT ON COLUMN PROPERTY_DETAIL.MOVE_DATE IS '입주가능일';
-- 매물 상세정보 샘플 데이터 (2번째 외래키)
INSERT INTO PROPERTY_DETAIL VALUES(SEQ_PROPERTY_DETAIL_NO.NEXTVAL, 1, 5000, 1, 29, 6, 'SW', '난방비싼거', 'Y' , 5000, 100, SYSDATE);
INSERT INTO PROPERTY_DETAIL (PD_NO, PP_NO, COST, FLOOR, DIRECTION, HEATING, ELEVATOR, TOTAL_HOUSEHOLDS, PARKING, MOVE_DATE) 
     VALUES (SEQ_PROPERTY_DETAIL_NO.NEXTVAL, 2, 6000, 6, 'SW', '난방싼거', 'Y' , 3000, 50, SYSDATE);
INSERT INTO PROPERTY_DETAIL (PD_NO, PP_NO, COST, ELEVATOR) 
     VALUES (SEQ_PROPERTY_DETAIL_NO.NEXTVAL, 3, 7000, 'N');
INSERT INTO PROPERTY_DETAIL (PD_NO, PP_NO, COST, ELEVATOR) 
     VALUES (SEQ_PROPERTY_DETAIL_NO.NEXTVAL, 4, 8000, 'Y');
INSERT INTO PROPERTY_DETAIL (PD_NO, PP_NO, COST, ELEVATOR) 
     VALUES (SEQ_PROPERTY_DETAIL_NO.NEXTVAL, 5, 8000, 'Y');
     
     
     
     
     
     
     
-- 매물 사진 PP_IMG
CREATE TABLE PP_IMG(
    PP_IMG_NO NUMBER PRIMARY KEY,
    PP_NO NUMBER NOT NULL REFERENCES PROPERTY ON DELETE CASCADE,
    ORIGIN_NAME VARCHAR2(255) NOT NULL,
    CHANGE_NAME VARCHAR2(255) NOT NULL,
    FILEPATH VARCHAR2(300) NOT NULL,
    FILE_LEVEL CHAR(1) NOT NULL CHECK (FILE_LEVEL IN ('1', '2', '3', '4', '5', '6', '7', '8', '9')),
    UPLOAD_DATE DATE DEFAULT SYSDATE NOT NULL,
    STATUS CHAR(1) DEFAULT 'Y' NOT NULL CHECK (STATUS IN('Y', 'N'))
);
-- 매물 사진 시퀀스
CREATE SEQUENCE SEQ_PROPERTY_IMG_NO
NOCACHE;
-- 사진 경로 통일시 리뷰 사진 시퀀스
--CREATE SEQUENCE SEQ_IMG_NO
--NOCACHE;
-- 매물 사진 커맨트
COMMENT ON COLUMN PP_IMG.PP_IMG_NO IS '매물사진번호';
COMMENT ON COLUMN PP_IMG.PP_NO IS '매물번호';
COMMENT ON COLUMN PP_IMG.ORIGIN_NAME IS '원본명';
COMMENT ON COLUMN PP_IMG.CHANGE_NAME IS '수정명';
COMMENT ON COLUMN PP_IMG.FILEPATH IS '파일경로';
COMMENT ON COLUMN PP_IMG.FILE_LEVEL IS '파일레벨';
COMMENT ON COLUMN PP_IMG.UPLOAD_DATE IS '업로드날짜';
COMMENT ON COLUMN PP_IMG.STATUS IS '상태';
-- 매물 사진 샘플 데이터 (2번째 외래키)
INSERT INTO PP_IMG VALUES(SEQ_PROPERTY_IMG_NO.NEXTVAL, 1, 'hightower.png', '20240811010206.png', '/resources/bImg/', '2', DEFAULT, DEFAULT);
INSERT INTO PP_IMG VALUES(SEQ_PROPERTY_IMG_NO.NEXTVAL, 2, 'apartment.jpg', '20240811010207.jpg', '/resources/bImg/', '2', DEFAULT, DEFAULT);
INSERT INTO PP_IMG VALUES(SEQ_PROPERTY_IMG_NO.NEXTVAL, 3, 'cat.gif', '20240811010208.gif', '/resources/bImg/', '2', DEFAULT, 'N');
INSERT INTO PP_IMG VALUES(SEQ_PROPERTY_IMG_NO.NEXTVAL, 4, 'apartment.jpg', '20240811010207.jpg', '/resources/bImg/', '2', DEFAULT, DEFAULT);
INSERT INTO PP_IMG VALUES(SEQ_PROPERTY_IMG_NO.NEXTVAL, 5, 'cat.gif', '20240811010208.gif', '/resources/bImg/', '2', DEFAULT, 'N');


-- 정부기관 테이블
CREATE TABLE AGENCY (
	AGENCY_NO NUMBER CONSTRAINT PK_AGENCY_NO PRIMARY KEY,
	AGENCY_NAME	VARCHAR2(50) NOT NULL,
	PHONE	VARCHAR2(13),
	ADDRESS	VARCHAR2(200)
);


-- 정부 기관 번호 시퀀스
CREATE SEQUENCE SEQ_AGENCYNO
NOCACHE;


-- 정부기관 코멘트
COMMENT ON COLUMN AGENCY.AGENCY_NO IS '정부기관 번호';
COMMENT ON COLUMN AGENCY.AGENCY_NAME IS '기관명';
COMMENT ON COLUMN AGENCY.PHONE IS '대표연락처';
COMMENT ON COLUMN AGENCY.ADDRESS IS '위치';


-- 정부기관 임의 데이터
INSERT INTO AGENCY 
VALUES (SEQ_AGENCYNO.NEXTVAL, '국세청', '02-123-4567', '서울특별시 종로구 종로 38');

INSERT INTO AGENCY
VALUES (SEQ_AGENCYNO.NEXTVAL, '서울지방경찰청', '02-987-6543', '서울특별시 중구 세종대로 31');

INSERT INTO AGENCY
VALUES (SEQ_AGENCYNO.NEXTVAL, '환경부', '02-345-6789', '세종특별자치시 도움6로 11');

INSERT INTO AGENCY
VALUES (SEQ_AGENCYNO.NEXTVAL, '문화체육관광부', '02-555-6666', '세종특별자치시 갈매로 388');

INSERT INTO AGENCY
VALUES (SEQ_AGENCYNO.NEXTVAL, '국민권익위원회', '02-123-1234', '세종특별자치시 도움5로 20');




-- 정책 테이블
CREATE TABLE BOARD_POLICY(
	POLICY_NO NUMBER CONSTRAINT PK_POLICY_NO PRIMARY KEY,
	BOARD_NO NUMBER REFERENCES BOARD ON DELETE CASCADE,
	AGENCY_NO NUMBER NOT NULL,
	START_DATE DATE NOT NULL,
	END_DATE DATE NOT NULL,
    FOREIGN KEY(BOARD_NO)REFERENCES BOARD(BOARD_NO),
    FOREIGN KEY(AGENCY_NO) REFERENCES AGENCY(AGENCY_NO)
);


-- 정책 번호 시퀀스
CREATE SEQUENCE SEQ_BPNO
NOCACHE;


-- 정책 코멘트
COMMENT ON COLUMN BOARD_POLICY.POLICY_NO IS '정책 번호';
COMMENT ON COLUMN BOARD_POLICY.BOARD_NO IS '게시글 번호';
COMMENT ON COLUMN BOARD_POLICY.AGENCY_NO IS '기관 번호';
COMMENT ON COLUMN BOARD_POLICY.START_DATE IS '실행일';
COMMENT ON COLUMN BOARD_POLICY.END_DATE IS '마감일';


-- 정책 임의 데이터 : 2,3번째 외래키 데이터이므로 알맞게 변경해야함
INSERT INTO BOARD_POLICY
VALUES (SEQ_BPNO.NEXTVAL, 1, 1, TO_DATE('2024-08-01', 'YYYY-MM-DD'), TO_DATE('2024-12-31', 'YYYY-MM-DD'));

INSERT INTO BOARD_POLICY
VALUES (SEQ_BPNO.NEXTVAL, 2, 2, TO_DATE('2024-09-15', 'YYYY-MM-DD'), TO_DATE('2025-03-31', 'YYYY-MM-DD'));

INSERT INTO BOARD_POLICY
VALUES (SEQ_BPNO.NEXTVAL, 3, 3, TO_DATE('2024-10-01', 'YYYY-MM-DD'), TO_DATE('2024-12-31', 'YYYY-MM-DD'));

INSERT INTO BOARD_POLICY
VALUES (SEQ_BPNO.NEXTVAL, 4, 4, TO_DATE('2024-11-01', 'YYYY-MM-DD'), TO_DATE('2025-05-31', 'YYYY-MM-DD'));

INSERT INTO BOARD_POLICY
VALUES (SEQ_BPNO.NEXTVAL, 5, 5, TO_DATE('2024-12-01', 'YYYY-MM-DD'), TO_DATE('2025-06-30', 'YYYY-MM-DD'));







-- 반복 테이블



CREATE TABLE REPEAT (
   REPEAT_NO NUMBER PRIMARY KEY,
   REPEAT_NAME   VARCHAR2(15) NOT NULL
);

COMMENT ON COLUMN REPEAT.REPEAT_NO IS '반복번호';
COMMENT ON COLUMN REPEAT.REPEAT_NAME IS '반복이름';


-- 앞에 FOREIGN KEY => 경원 일정테이블(SCHEDULE)
INSERT INTO REPEAT VALUES (1, '매일');
INSERT INTO REPEAT VALUES (2, '매주');
INSERT INTO REPEAT VALUES (3, '격주');
INSERT INTO REPEAT VALUES (4, '매월');
INSERT INTO REPEAT VALUES (5, '매년');


-- 알림 테이블

CREATE TABLE ALARM (
	A_NO NUMBER CONSTRAINT PK_A_NO PRIMARY KEY,
	A_TIME VARCHAR2(20)
);


-- 알림 테이블 코멘트
COMMENT ON COLUMN ALARM.A_NO IS '알림 번호';
COMMENT ON COLUMN ALARM.A_TIME IS '알림 시간';




INSERT INTO ALARM
VALUES (10, '5분 전 알림');

INSERT INTO ALARM
VALUES(20, '10분 전 알림');

INSERT INTO ALARM
VALUES (30, '15분 전 알림');

INSERT INTO ALARM
VALUES (40, '30분 전 알림');

INSERT INTO ALARM
VALUES (50, '1시간 전 알림');




-- 일정 SCHEDULE
CREATE TABLE SCHEDULE(
    S_NO NUMBER,
    S_TITLE VARCHAR2(200) NOT NULL,
    S_CONTENT VARCHAR2(4000),
    -- ㄴ> 제목은 NOT NULL, 메모는 NULL가능으로 지정
    START_DATE DATE NOT NULL,
    END_DATE DATE,
    A_NO NUMBER NOT NULL,
    REPEAT_NO NUMBER NOT NULL,
    STATUS CHAR(1) DEFAULT 'Y' NOT NULL,
    USER_NO NUMBER CONSTRAINT FK_SCHEDULE_USER_NO  NOT NULL REFERENCES USER1,
    CONSTRAINT PK_SCHEDULE_NO PRIMARY KEY (S_NO),
    CONSTRAINT FK_SCHEDULE_ALARM_NO FOREIGN KEY (A_NO) REFERENCES ALARM(A_NO) ON DELETE CASCADE,
    CONSTRAINT FK_SCHEDULE_REPEAT_NO FOREIGN KEY (REPEAT_NO) REFERENCES REPEAT(REPEAT_NO) ON DELETE CASCADE,
    CONSTRAINT CHK_SCHEDULE_STATUS CHECK (STATUS IN('Y', 'N'))
    
    -- ㄴ> USER1 테이블명 변경시 변경 필요
)
;

-- 일정 시퀀스

CREATE SEQUENCE SEQ_SCHEDULE_NO
NOCACHE;
-- 일정 커맨트
COMMENT ON COLUMN SCHEDULE.S_NO IS '일정번호';
COMMENT ON COLUMN SCHEDULE.S_TITLE IS '일정제목';
COMMENT ON COLUMN SCHEDULE.S_CONTENT IS '일정메모'; --
COMMENT ON COLUMN SCHEDULE.START_DATE IS '시작시간';
COMMENT ON COLUMN SCHEDULE.END_DATE IS '종료시간';
COMMENT ON COLUMN SCHEDULE.A_NO IS '알림번호';
COMMENT ON COLUMN SCHEDULE.REPEAT_NO IS '반복번호';
COMMENT ON COLUMN SCHEDULE.STATUS IS '상태';
COMMENT ON COLUMN SCHEDULE.USER_NO IS '회원번호';
-- 일정 샘플 데이터 (2번째와 마지막 외래키)
INSERT INTO SCHEDULE VALUES(SEQ_SCHEDULE_NO.NEXTVAL, '라면먹기', '세상에서 제일 기쁜건 라면먹기', SYSDATE, SYSDATE, 10, 1, DEFAULT, 1);
INSERT INTO SCHEDULE VALUES(SEQ_SCHEDULE_NO.NEXTVAL, '운동하기', '운동 가즈아', SYSDATE, SYSDATE, 20, 2, DEFAULT, 2);
INSERT INTO SCHEDULE(S_NO, S_TITLE, START_DATE, END_DATE, A_NO, REPEAT_NO, STATUS, USER_NO) VALUES(SEQ_SCHEDULE_NO.NEXTVAL, '라면또먹기', SYSDATE, SYSDATE, 30, 3, DEFAULT, 3);

INSERT INTO SCHEDULE(S_NO, S_TITLE, START_DATE, END_DATE, A_NO, REPEAT_NO, STATUS, USER_NO) 
VALUES(SEQ_SCHEDULE_NO.NEXTVAL, '약먹기', SYSDATE, SYSDATE, 30, 1, DEFAULT, 3);

INSERT INTO SCHEDULE(S_NO, S_TITLE, START_DATE, END_DATE, A_NO, REPEAT_NO, STATUS, USER_NO) 
VALUES(SEQ_SCHEDULE_NO.NEXTVAL, '약먹기', SYSDATE, SYSDATE, 30, 1, DEFAULT, 5);


commit;