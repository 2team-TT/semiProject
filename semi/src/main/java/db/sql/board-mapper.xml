<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<entry key="mainSelectBoardBestList">
			SELECT 
	           BOARD_NO
	         , BOARD_TITLE 
	         , VIEW_COUNT
	  FROM(  
	       SELECT 
			       BOARD_NO
			     , BOARD_TITLE 
			     , VIEW_COUNT
			 FROM BOARD
			WHERE STATUS ='Y'
	          AND TAG_NO IN(110,120)
			ORDER BY VIEW_COUNT DESC)
	WHERE ROWNUM BETWEEN 1 AND 5
	</entry>
	
	<entry key="mainSelectHoneyList">
			SELECT 
	           BOARD_NO
	         , BOARD_TITLE 
	         , VIEW_COUNT
	  FROM(  
	       SELECT 
			       BOARD_NO
			     , BOARD_TITLE 
			     , VIEW_COUNT
			 FROM BOARD
			WHERE STATUS ='Y'
	          AND TAG_NO=110
			ORDER BY VIEW_COUNT DESC)
	WHERE ROWNUM BETWEEN 1 AND 5
	</entry>
	
	
	<entry key="mainSelectNoticeList">
	SELECT 
	           BOARD_NO
	         , BOARD_TITLE 
	         , CREATE_DATE
	  FROM(  
	       SELECT 
			       BOARD_NO
			     , BOARD_TITLE 
			     , TO_CHAR(CREATE_DATE,'YYYY-MM-DD') AS "CREATE_DATE"
			 FROM BOARD
			WHERE STATUS ='Y'
	          AND TAG_NO=500
			ORDER BY BOARD_NO DESC)
	WHERE ROWNUM BETWEEN 1 AND 5
	</entry>
	
	
	<entry key="selectFreeBoardListCount">
	SELECT COUNT(*) AS "COUNT"
	FROM BOARD
	WHERE TAG_NO = 120
	</entry>
	
	<entry key="selectFreeBoardList">
	SELECT *
	FROM(SELECT ROWNUM AS "RNUM", A.*
	FROM (SELECT 
	               BOARD_NO
	             , TAG_NAME
	             , BOARD_TITLE
	             , BOARD_CONTENT
	             , USER_ID
	             , VIEW_COUNT
	             , REPLY_COUNT
	             , LIKES_COUNT
	             , TO_CHAR(CREATE_DATE,'YYYY-MM-DD') AS "CREATE_DATE"
	             , BOARD.STATUS AS "STATUS"
	        FROM BOARD
	        JOIN USER1 ON (BOARD_WRITER = USER_NO)
	        JOIN TAG USING(TAG_NO)
	        WHERE TAG_NO = 120
	          AND BOARD.STATUS = 'Y'
	        ORDER 
	           BY BOARD_NO DESC) A)
	 WHERE RNUM BETWEEN ? AND ?
	
	</entry>
	
	
	<entry key="selectBestFreeBoardList">
	SELECT *
	FROM(SELECT ROWNUM AS "RNUM", A.*
	FROM (SELECT 
	               BOARD_NO
	             , TAG_NAME
	             , BOARD_TITLE
	             , BOARD_CONTENT
	             , USER_ID
	             , VIEW_COUNT
	             , REPLY_COUNT
	             , LIKES_COUNT
	             , TO_CHAR(CREATE_DATE,'YYYY-MM-DD') AS "CREATE_DATE"
	             , BOARD.STATUS AS "STATUS"
	        FROM BOARD
	        JOIN USER1 ON (BOARD_WRITER = USER_NO)
	        JOIN TAG USING(TAG_NO)
	        WHERE TAG_NO = 120
	          AND BOARD.STATUS = 'Y'
	        ORDER 
	           BY VIEW_COUNT DESC) A)
	 WHERE RNUM BETWEEN ? AND ?
	
	</entry>
	
	
	
	<entry key="selectHoneyBoardList">
	SELECT *
	FROM(SELECT ROWNUM AS "RNUM", A.*
	FROM (SELECT 
	               BOARD_NO
	             , TAG_NAME
	             , BOARD_TITLE
	             , BOARD_CONTENT
	             , USER_ID
	             , VIEW_COUNT
	             , REPLY_COUNT
	             , LIKES_COUNT
	             , TO_CHAR(CREATE_DATE,'YYYY-MM-DD') AS "CREATE_DATE"
	             , BOARD.STATUS AS "STATUS"
	        FROM BOARD
	        JOIN USER1 ON (BOARD_WRITER = USER_NO)
	        JOIN TAG USING(TAG_NO)
	        WHERE TAG_NO = 110
	          AND BOARD.STATUS = 'Y'
	        ORDER 
	           BY BOARD_NO DESC) A)
	 WHERE RNUM BETWEEN ? AND ?
	
	</entry>
	
	
	<entry key="selectBestHoneyBoardList">
	SELECT *
	FROM(SELECT ROWNUM AS "RNUM", A.*
	FROM (SELECT 
	               BOARD_NO
	             , TAG_NAME
	             , BOARD_TITLE
	             , BOARD_CONTENT
	             , USER_ID
	             , VIEW_COUNT
	             , REPLY_COUNT
	             , LIKES_COUNT
	             , TO_CHAR(CREATE_DATE,'YYYY-MM-DD') AS "CREATE_DATE"
	             , BOARD.STATUS AS "STATUS"
	        FROM BOARD
	        JOIN USER1 ON (BOARD_WRITER = USER_NO)
	        JOIN TAG USING(TAG_NO)
	        WHERE TAG_NO = 110
	          AND BOARD.STATUS = 'Y'
	        ORDER 
	           BY VIEW_COUNT DESC) A)
	 WHERE RNUM BETWEEN ? AND ?
	
	</entry>
	
	<!-- 내 게시글을 갯수 카운트 쿼리문 -->
	<entry key="selectMyBoardListCount">
	
		SELECT COUNT(*) AS "COUNT"
		  FROM BOARD  
		 WHERE BOARD_WRITER = ?
		   AND STATUS = 'Y'
           AND TAG_NO LIKE '1%'
	</entry>
	
	<!-- 마이페이지 내 게시글 불러올 쿼리문 -->
	<entry key="selectMyBoardList">
		SELECT *
		  FROM ( SELECT ROWNUM RNUM, MYBOARD.*
		          FROM (SELECT BOARD_NO
		                     , TAG_NAME
		                     , BOARD_TITLE
		                     , USER_ID
		                     , VIEW_COUNT
		                     , REPLY_COUNT
		                     , TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') AS "CREATE_DATE"
		                  FROM BOARD
		                  JOIN USER1 ON (BOARD_WRITER = USER_NO)
		                  JOIN TAG USING(TAG_NO)
		                 WHERE TAG_NO LIKE '1__'
		                   AND BOARD.STATUS = 'Y'
		                   AND USER_NO = ?
		                 ORDER
		                    BY BOARD_NO DESC
		                ) MYBOARD
		      )
		 WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<!-- 내 댓글 갯수 카운트 쿼리문 -->
	<entry key="selectMyReplyCount">
		SELECT COUNT(*) AS "COUNT"
		  FROM REPLY  
		 WHERE REPLY_WRITER = ?
		   AND STATUS = 'Y'
	</entry>
	
	<!-- 마이페이지 내 댓글 불러올 쿼리문 -->
	<entry key="selectMyReplyList">
		SELECT *
		  FROM (SELECT ROWNUM RNUM, MYREPLY.*
		          FROM (SELECT REPLY_NO
		                     , BOARD_NO
		                     , BOARD_WRITER
		                     , REPLY_WRITER
		                     , USER_NICK
                     		 , USER_ID
		                     , REPLY_CONTENT
		                     , REPLY.LIKES_COUNT
		                     , TAG_NAME
		                     , TO_CHAR(REPLY.CREATE_DATE, 'YYYY-MM-DD') AS "CREATE_DATE"
		                  FROM REPLY
		                  JOIN BOARD USING(BOARD_NO)
		                  JOIN TAG USING(TAG_NO)
		                  JOIN RE_REPLY USING(REPLY_NO)
		                  JOIN USER1 ON(REPLY_WRITER = USER_NO)
		                 WHERE REPLY.STATUS = 'Y'
		                   AND REPLY_WRITER = ?
		                 ORDER
		                    BY REPLY_NO DESC
		              ) MYREPLY   
		        )
		 WHERE RNUM BETWEEN ? AND ?
	</entry>

</properties>