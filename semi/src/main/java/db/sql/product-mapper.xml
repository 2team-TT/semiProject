<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<!-- 내 문의 내역 카운트 -->
	<entry key="selectMyProductQeustionCount">
		SELECT COUNT(*) AS "COUNT"
		  FROM PRODUCT_INQUIRY
		 WHERE USER_NO = ?
	</entry>
	
	<!--  내 문의 내역 조회 -->
	<entry key="selectMyProductQuestionList">
		SELECT *
		  FROM(SELECT ROWNUM RNUM, QNA.*
		          FROM (SELECT P_NAME
		                     , PI_TITLE
		                     , PI_CONTENT
		                     , ANSWER
		                     , TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') AS "CREATE_DATE"
		                     , PA_CONTENT
		                     , USER_NO
		                  FROM PRODUCT_INQUIRY
		                  JOIN PRODUCT USING (P_NO)
		                  LEFT JOIN PRODUCT_ANSWER USING(PI_NO)
		                 WHERE USER_NO = ?
		                   AND PRODUCT_INQUIRY.STATUS = 'Y'
		                 ORDER
		                    BY CREATE_DATE DESC
		                ) QNA
		     )
		 WHERE RNUM BETWEEN ? AND ?
	</entry>
	<!-- 마이페이지 찜 한 상품 조회 -->
	<entry key="selectMyProductsList">
		SELECT P_NO
			 , P_NAME
             , PRICE
             , P_SELLER
             , RATING
             , P_CONTENT
             , USER_NO
             , TO_CHAR(C_DATE, 'YYYY-MM-DD') AS "C_DATE"
          FROM PRODUCT
          JOIN CHOOSE USING(P_NO)
         WHERE USER_NO = ?
         ORDER BY C_DATE DESC
	</entry>
	
	<!-- 마이페이지 최근 본 상품 조회 -->
	<entry key="selectMyRecentlyProductsList">
	    SELECT P_NO
	         , P_NAME
	         , PRICE
	         , TO_CHAR(LATELY_DATE, 'YYYY-MM-DD') AS "LATELY_DATE"
	      FROM PRODUCT P
	      JOIN RECENTLY_PRODUCT USING(P_NO)
	     WHERE USER_NO = ?
	     ORDER
	        BY LATELY_DATE DESC
</entry>

	<!-- 마이페이지 찜한 상품 삭제 -->
	<entry key="deleteMywishlistProduct">
		DELETE CHOOSE
		 WHERE USER_NO = ?
		   AND P_NO = ?
	</entry>
	
	<!-- 마이페이지 최근 본 상품 삭제 -->
	<entry key="deleteRecentlyViewedProduct">
		DELETE RECENTLY_PRODUCT
		 WHERE USER_NO = ?
		   AND P_NO = ?
	</entry>
	
	<!-- 전체상품 베스트 가져오기(최대20개) -->
	<entry key="selectProductBestOfAll">
	    SELECT P_NO, TAG_NO, P_NAME, PRICE, RATING, FILEPATH, CHANGE_NAME 
	      FROM (
			    SELECT P_NO, TAG_NO, P_NAME, PRICE, RATING, FILEPATH, CHANGE_NAME
			      FROM (
	                    SELECT P_NO, TAG_NO, P_NAME, PRICE*DISCOUNT AS "PRICE", RATING, FILEPATH, CHANGE_NAME,
	                           ROW_NUMBER() OVER (PARTITION BY P_NO ORDER BY RATING DESC NULLS LAST) AS rn
	                      FROM PRODUCT
	                      LEFT JOIN PRODUCT_IMG USING(P_NO)
	                     WHERE TAG_NO BETWEEN 211 AND 249
	                   ) subquery
		         WHERE rn = 1
	  	         ORDER 
			        BY RATING DESC NULLS LAST
			   )
		 WHERE ROWNUM &lt;= 20
	</entry>
	
	<!-- 일반 상품 베스트 가져오기(최대20개) -->
	<entry key="selectProductCommonBest">
    	SELECT P_NO, TAG_NO, P_NAME, PRICE, RATING, FILEPATH, CHANGE_NAME 
	      FROM (
			    SELECT P_NO, TAG_NO, P_NAME, PRICE, RATING, FILEPATH, CHANGE_NAME
			      FROM (
	                    SELECT P_NO, TAG_NO, P_NAME, PRICE*DISCOUNT AS "PRICE", RATING, FILEPATH, CHANGE_NAME,
	                           ROW_NUMBER() OVER (PARTITION BY P_NO ORDER BY RATING DESC NULLS LAST) AS rn
	                      FROM PRODUCT
	                      LEFT JOIN PRODUCT_IMG USING(P_NO)
	                     WHERE TAG_NO BETWEEN 211 AND 219
	                   ) subquery
		         WHERE rn = 1
	  	         ORDER 
			        BY RATING DESC NULLS LAST
			   )
		 WHERE ROWNUM &lt;= 20
	</entry>
	
	<!-- 리퍼 상품 베스트 가져오기(최대20개) -->
	<entry key="selectProductRefurbishedBest">
	    SELECT P_NO, TAG_NO, P_NAME, PRICE, RATING, FILEPATH, CHANGE_NAME 
	      FROM (
			    SELECT P_NO, TAG_NO, P_NAME, PRICE, RATING, FILEPATH, CHANGE_NAME
			      FROM (
	                    SELECT P_NO, TAG_NO, P_NAME, PRICE*DISCOUNT AS "PRICE", RATING, FILEPATH, CHANGE_NAME,
	                           ROW_NUMBER() OVER (PARTITION BY P_NO ORDER BY RATING DESC NULLS LAST) AS rn
	                      FROM PRODUCT
	                      LEFT JOIN PRODUCT_IMG USING(P_NO)
	                     WHERE TAG_NO BETWEEN 221 AND 227
	                   ) subquery
		         WHERE rn = 1
	  	         ORDER 
			        BY RATING DESC NULLS LAST
			   )
		 WHERE ROWNUM &lt;= 20
	</entry>
	
	
	
<entry key="mainSelectListProduct">
SELECT *
FROM (
SELECT 
       P.P_NO
     , TAG_NO
     , P_NAME
     , PRICE*(DISCOUNT) AS "PRICE"
     , DECODE(DISCOUNT,1,' ', (1-DISCOUNT)*100 || '%') AS "DISCOUNT"
     , RATING
     , PR_COUNT
     , FILEPATH || CHANGE_NAME AS "FILEPATH"
FROM PRODUCT P
JOIN PRODUCT_IMG I ON(P.P_NO = I.P_NO)
WHERE P.STATUS ='Y'
ORDER BY VIEW_COUNT DESC )
WHERE ROWNUM BETWEEN 1 AND 10
</entry>



<entry key="searchProductList">

SELECT *
FROM (
SELECT 
       P.P_NO
     , TAG_NO
     , P_NAME
     , PRICE*(DISCOUNT) AS "PRICE"
     , DECODE(DISCOUNT,1,' ', (1-DISCOUNT)*100 || '%') AS "DISCOUNT"
     , RATING
     , PR_COUNT
     , FILEPATH || CHANGE_NAME AS "FILEPATH"
FROM PRODUCT P
JOIN PRODUCT_IMG I ON(P.P_NO = I.P_NO)
WHERE P.STATUS ='Y' 
  AND P_NAME LIKE ?
ORDER BY VIEW_COUNT DESC )
WHERE ROWNUM BETWEEN 1 AND 10

</entry>





</properties>